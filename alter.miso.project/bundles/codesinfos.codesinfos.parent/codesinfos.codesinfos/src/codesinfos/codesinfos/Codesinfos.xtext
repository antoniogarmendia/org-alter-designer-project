// automatically generated by Xtext JSON Grammar
grammar codesinfos.codesinfos.Codesinfos with org.eclipse.xtext.common.Terminals

import "http://jku.bise.at/codesinfos" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

//EClass CodesinfosRoot
CodesinfosRoot returns CodesinfosRoot:
	{CodesinfosRoot}
			//EReference is not a keyword
			'{'(codesinfosRoot+=CodesinfosRootPropertiesAbstract ( "," codesinfosRoot+=CodesinfosRootPropertiesAbstract)* )?'}'
	;

CodesinfosRootPropertiesAbstract returns CodesinfosRootPropertiesAbstract:
	CodesinfosRootName | CodesinfosRootCodes;


CodesinfosRootCodesItemsPropertiesAbstract returns CodesinfosRootCodesItemsPropertiesAbstract:
	CodesinfosRootCodesItemsName | CodesinfosRootCodesItemsClassname | CodesinfosRootCodesItemsNodename;

//EClass CodesinfosRootName
CodesinfosRootName returns CodesinfosRootName:
	{CodesinfosRootName}
	//Keyword´s Name
	//Keywords
	'"name"' ':'
	name=EString
	;

//EClass CodesinfosRootCodes
CodesinfosRootCodes returns CodesinfosRootCodes:
	{CodesinfosRootCodes}
			//Keywords
			'"codes"' ':'
			'['(codes+=CodesinfosRootCodesItems ( "," codes+=CodesinfosRootCodesItems)* )?']'
	;

EString returns ecore::EString:
	VALID_STRING;

//EClass CodesinfosRootCodesItems
CodesinfosRootCodesItems returns CodesinfosRootCodesItems:
	{CodesinfosRootCodesItems}
			//EReference is not a keyword
			'{'(items+=CodesinfosRootCodesItemsPropertiesAbstract ( "," items+=CodesinfosRootCodesItemsPropertiesAbstract)* )?'}'
	;

//EClass CodesinfosRootCodesItemsName
CodesinfosRootCodesItemsName returns CodesinfosRootCodesItemsName:
	{CodesinfosRootCodesItemsName}
	//Keyword´s Name
	//Keywords
	'"name"' ':'
	name=EString
	;

//EClass CodesinfosRootCodesItemsClassname
CodesinfosRootCodesItemsClassname returns CodesinfosRootCodesItemsClassname:
			//Keywords
			'"classname"' ':'
			classname=EString
	;

//EClass CodesinfosRootCodesItemsNodename
CodesinfosRootCodesItemsNodename returns CodesinfosRootCodesItemsNodename:
			//Keywords
			'"nodename"' ':'
			nodename=EString
	;

/**
 * In JSON the first digit of an integer can not be 0, unless it is 0 itself.
 */
@Override 
terminal INT returns ecore::EInt: 
	('0' |  (('1'..'9') ('0'..'9')*))
;

VALID_STRING: STRING  | KEYWORD ;


/**
 * In JSON the single quote for String is not admitted
 */
@Override 
terminal STRING:
	'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
;	


terminal E_INT :
	'-'? INT;


KEYWORD:  
'"codes"'  | 
'"nodename"'  | 
'"classname"'  | 
'"name"' 
;


terminal E_DOUBLE :
	'-'? INT ('.' INT+)? (('E'|'e') ('+'|'-')? INT)?
;



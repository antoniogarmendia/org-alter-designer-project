/*
 * generated by Xtext 2.23.0
 */
package codesinfos.codesinfos.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CodesinfosGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class CodesinfosRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.CodesinfosRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCodesinfosRootAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cCodesinfosRootAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cCodesinfosRootCodesinfosRootPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cCodesinfosRootAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cCodesinfosRootAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cCodesinfosRootCodesinfosRootPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cCodesinfosRootAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass CodesinfosRoot
		//CodesinfosRoot:
		//	{CodesinfosRoot}
		//	//EReference is not a keyword
		//	'{' (codesinfosRoot+=CodesinfosRootPropertiesAbstract ("," codesinfosRoot+=CodesinfosRootPropertiesAbstract)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{CodesinfosRoot} //EReference is not a keyword
		//'{' (codesinfosRoot+=CodesinfosRootPropertiesAbstract ("," codesinfosRoot+=CodesinfosRootPropertiesAbstract)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{CodesinfosRoot}
		public Action getCodesinfosRootAction_0() { return cCodesinfosRootAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(codesinfosRoot+=CodesinfosRootPropertiesAbstract ("," codesinfosRoot+=CodesinfosRootPropertiesAbstract)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//codesinfosRoot+=CodesinfosRootPropertiesAbstract
		public Assignment getCodesinfosRootAssignment_2_0() { return cCodesinfosRootAssignment_2_0; }
		
		//CodesinfosRootPropertiesAbstract
		public RuleCall getCodesinfosRootCodesinfosRootPropertiesAbstractParserRuleCall_2_0_0() { return cCodesinfosRootCodesinfosRootPropertiesAbstractParserRuleCall_2_0_0; }
		
		//("," codesinfosRoot+=CodesinfosRootPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//codesinfosRoot+=CodesinfosRootPropertiesAbstract
		public Assignment getCodesinfosRootAssignment_2_1_1() { return cCodesinfosRootAssignment_2_1_1; }
		
		//CodesinfosRootPropertiesAbstract
		public RuleCall getCodesinfosRootCodesinfosRootPropertiesAbstractParserRuleCall_2_1_1_0() { return cCodesinfosRootCodesinfosRootPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class CodesinfosRootPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.CodesinfosRootPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCodesinfosRootNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCodesinfosRootCodesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//CodesinfosRootPropertiesAbstract:
		//	CodesinfosRootName | CodesinfosRootCodes;
		@Override public ParserRule getRule() { return rule; }
		
		//CodesinfosRootName | CodesinfosRootCodes
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CodesinfosRootName
		public RuleCall getCodesinfosRootNameParserRuleCall_0() { return cCodesinfosRootNameParserRuleCall_0; }
		
		//CodesinfosRootCodes
		public RuleCall getCodesinfosRootCodesParserRuleCall_1() { return cCodesinfosRootCodesParserRuleCall_1; }
	}
	public class CodesinfosRootCodesItemsPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.CodesinfosRootCodesItemsPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCodesinfosRootCodesItemsNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCodesinfosRootCodesItemsClassnameParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCodesinfosRootCodesItemsNodenameParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//CodesinfosRootCodesItemsPropertiesAbstract:
		//	CodesinfosRootCodesItemsName | CodesinfosRootCodesItemsClassname | CodesinfosRootCodesItemsNodename;
		@Override public ParserRule getRule() { return rule; }
		
		//CodesinfosRootCodesItemsName | CodesinfosRootCodesItemsClassname | CodesinfosRootCodesItemsNodename
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CodesinfosRootCodesItemsName
		public RuleCall getCodesinfosRootCodesItemsNameParserRuleCall_0() { return cCodesinfosRootCodesItemsNameParserRuleCall_0; }
		
		//CodesinfosRootCodesItemsClassname
		public RuleCall getCodesinfosRootCodesItemsClassnameParserRuleCall_1() { return cCodesinfosRootCodesItemsClassnameParserRuleCall_1; }
		
		//CodesinfosRootCodesItemsNodename
		public RuleCall getCodesinfosRootCodesItemsNodenameParserRuleCall_2() { return cCodesinfosRootCodesItemsNodenameParserRuleCall_2; }
	}
	public class CodesinfosRootNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.CodesinfosRootName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCodesinfosRootNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		////EClass CodesinfosRootName
		//CodesinfosRootName:
		//	{CodesinfosRootName}
		//	//Keyword´s Name
		//	//Keywords
		//	'"name"' ':'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{CodesinfosRootName} //Keyword´s Name
		////Keywords
		//'"name"' ':' name=EString
		public Group getGroup() { return cGroup; }
		
		//{CodesinfosRootName}
		public Action getCodesinfosRootNameAction_0() { return cCodesinfosRootNameAction_0; }
		
		////Keyword´s Name
		////Keywords
		//'"name"'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}
	public class CodesinfosRootCodesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.CodesinfosRootCodes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCodesinfosRootCodesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCodesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cCodesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cCodesCodesinfosRootCodesItemsParserRuleCall_4_0_0 = (RuleCall)cCodesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cCodesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cCodesCodesinfosRootCodesItemsParserRuleCall_4_1_1_0 = (RuleCall)cCodesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass CodesinfosRootCodes
		//CodesinfosRootCodes:
		//	{CodesinfosRootCodes}
		//	//Keywords
		//	'"codes"' ':'
		//	'[' (codes+=CodesinfosRootCodesItems ("," codes+=CodesinfosRootCodesItems)*)? ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{CodesinfosRootCodes} //Keywords
		//'"codes"' ':' '[' (codes+=CodesinfosRootCodesItems ("," codes+=CodesinfosRootCodesItems)*)? ']'
		public Group getGroup() { return cGroup; }
		
		//{CodesinfosRootCodes}
		public Action getCodesinfosRootCodesAction_0() { return cCodesinfosRootCodesAction_0; }
		
		////Keywords
		//'"codes"'
		public Keyword getCodesKeyword_1() { return cCodesKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(codes+=CodesinfosRootCodesItems ("," codes+=CodesinfosRootCodesItems)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//codes+=CodesinfosRootCodesItems
		public Assignment getCodesAssignment_4_0() { return cCodesAssignment_4_0; }
		
		//CodesinfosRootCodesItems
		public RuleCall getCodesCodesinfosRootCodesItemsParserRuleCall_4_0_0() { return cCodesCodesinfosRootCodesItemsParserRuleCall_4_0_0; }
		
		//("," codes+=CodesinfosRootCodesItems)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//codes+=CodesinfosRootCodesItems
		public Assignment getCodesAssignment_4_1_1() { return cCodesAssignment_4_1_1; }
		
		//CodesinfosRootCodesItems
		public RuleCall getCodesCodesinfosRootCodesItemsParserRuleCall_4_1_1_0() { return cCodesCodesinfosRootCodesItemsParserRuleCall_4_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.EString");
		private final RuleCall cVALID_STRINGParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString:
		//	VALID_STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//VALID_STRING
		public RuleCall getVALID_STRINGParserRuleCall() { return cVALID_STRINGParserRuleCall; }
	}
	public class CodesinfosRootCodesItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.CodesinfosRootCodesItems");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCodesinfosRootCodesItemsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cItemsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cItemsCodesinfosRootCodesItemsPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cItemsAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cItemsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cItemsCodesinfosRootCodesItemsPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cItemsAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass CodesinfosRootCodesItems
		//CodesinfosRootCodesItems:
		//	{CodesinfosRootCodesItems}
		//	//EReference is not a keyword
		//	'{' (items+=CodesinfosRootCodesItemsPropertiesAbstract ("," items+=CodesinfosRootCodesItemsPropertiesAbstract)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{CodesinfosRootCodesItems} //EReference is not a keyword
		//'{' (items+=CodesinfosRootCodesItemsPropertiesAbstract ("," items+=CodesinfosRootCodesItemsPropertiesAbstract)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{CodesinfosRootCodesItems}
		public Action getCodesinfosRootCodesItemsAction_0() { return cCodesinfosRootCodesItemsAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(items+=CodesinfosRootCodesItemsPropertiesAbstract ("," items+=CodesinfosRootCodesItemsPropertiesAbstract)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//items+=CodesinfosRootCodesItemsPropertiesAbstract
		public Assignment getItemsAssignment_2_0() { return cItemsAssignment_2_0; }
		
		//CodesinfosRootCodesItemsPropertiesAbstract
		public RuleCall getItemsCodesinfosRootCodesItemsPropertiesAbstractParserRuleCall_2_0_0() { return cItemsCodesinfosRootCodesItemsPropertiesAbstractParserRuleCall_2_0_0; }
		
		//("," items+=CodesinfosRootCodesItemsPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//items+=CodesinfosRootCodesItemsPropertiesAbstract
		public Assignment getItemsAssignment_2_1_1() { return cItemsAssignment_2_1_1; }
		
		//CodesinfosRootCodesItemsPropertiesAbstract
		public RuleCall getItemsCodesinfosRootCodesItemsPropertiesAbstractParserRuleCall_2_1_1_0() { return cItemsCodesinfosRootCodesItemsPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class CodesinfosRootCodesItemsNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.CodesinfosRootCodesItemsName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCodesinfosRootCodesItemsNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		////EClass CodesinfosRootCodesItemsName
		//CodesinfosRootCodesItemsName:
		//	{CodesinfosRootCodesItemsName}
		//	//Keyword´s Name
		//	//Keywords
		//	'"name"' ':'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{CodesinfosRootCodesItemsName} //Keyword´s Name
		////Keywords
		//'"name"' ':' name=EString
		public Group getGroup() { return cGroup; }
		
		//{CodesinfosRootCodesItemsName}
		public Action getCodesinfosRootCodesItemsNameAction_0() { return cCodesinfosRootCodesItemsNameAction_0; }
		
		////Keyword´s Name
		////Keywords
		//'"name"'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}
	public class CodesinfosRootCodesItemsClassnameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.CodesinfosRootCodesItemsClassname");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClassnameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cClassnameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cClassnameEStringParserRuleCall_2_0 = (RuleCall)cClassnameAssignment_2.eContents().get(0);
		
		////EClass CodesinfosRootCodesItemsClassname
		//CodesinfosRootCodesItemsClassname: //Keywords
		//	'"classname"' ':' classname=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"classname"' ':' classname=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"classname"'
		public Keyword getClassnameKeyword_0() { return cClassnameKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//classname=EString
		public Assignment getClassnameAssignment_2() { return cClassnameAssignment_2; }
		
		//EString
		public RuleCall getClassnameEStringParserRuleCall_2_0() { return cClassnameEStringParserRuleCall_2_0; }
	}
	public class CodesinfosRootCodesItemsNodenameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.CodesinfosRootCodesItemsNodename");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNodenameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNodenameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNodenameEStringParserRuleCall_2_0 = (RuleCall)cNodenameAssignment_2.eContents().get(0);
		
		////EClass CodesinfosRootCodesItemsNodename
		//CodesinfosRootCodesItemsNodename: //Keywords
		//	'"nodename"' ':' nodename=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"nodename"' ':' nodename=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"nodename"'
		public Keyword getNodenameKeyword_0() { return cNodenameKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//nodename=EString
		public Assignment getNodenameAssignment_2() { return cNodenameAssignment_2; }
		
		//EString
		public RuleCall getNodenameEStringParserRuleCall_2_0() { return cNodenameEStringParserRuleCall_2_0; }
	}
	public class VALID_STRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.VALID_STRING");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKEYWORDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//VALID_STRING:
		//	STRING | KEYWORD;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | KEYWORD
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//KEYWORD
		public RuleCall getKEYWORDParserRuleCall_1() { return cKEYWORDParserRuleCall_1; }
	}
	public class KEYWORDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.KEYWORD");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCodesKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cNodenameKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cClassnameKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//KEYWORD:
		//	'"codes"' |
		//	'"nodename"' |
		//	'"classname"' |
		//	'"name"';
		@Override public ParserRule getRule() { return rule; }
		
		//'"codes"' | '"nodename"' | '"classname"' | '"name"'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'"codes"'
		public Keyword getCodesKeyword_0() { return cCodesKeyword_0; }
		
		//'"nodename"'
		public Keyword getNodenameKeyword_1() { return cNodenameKeyword_1; }
		
		//'"classname"'
		public Keyword getClassnameKeyword_2() { return cClassnameKeyword_2; }
		
		//'"name"'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
	}
	
	
	private final CodesinfosRootElements pCodesinfosRoot;
	private final CodesinfosRootPropertiesAbstractElements pCodesinfosRootPropertiesAbstract;
	private final CodesinfosRootCodesItemsPropertiesAbstractElements pCodesinfosRootCodesItemsPropertiesAbstract;
	private final CodesinfosRootNameElements pCodesinfosRootName;
	private final CodesinfosRootCodesElements pCodesinfosRootCodes;
	private final EStringElements pEString;
	private final CodesinfosRootCodesItemsElements pCodesinfosRootCodesItems;
	private final CodesinfosRootCodesItemsNameElements pCodesinfosRootCodesItemsName;
	private final CodesinfosRootCodesItemsClassnameElements pCodesinfosRootCodesItemsClassname;
	private final CodesinfosRootCodesItemsNodenameElements pCodesinfosRootCodesItemsNodename;
	private final TerminalRule tINT;
	private final VALID_STRINGElements pVALID_STRING;
	private final TerminalRule tSTRING;
	private final TerminalRule tE_INT;
	private final KEYWORDElements pKEYWORD;
	private final TerminalRule tE_DOUBLE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CodesinfosGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pCodesinfosRoot = new CodesinfosRootElements();
		this.pCodesinfosRootPropertiesAbstract = new CodesinfosRootPropertiesAbstractElements();
		this.pCodesinfosRootCodesItemsPropertiesAbstract = new CodesinfosRootCodesItemsPropertiesAbstractElements();
		this.pCodesinfosRootName = new CodesinfosRootNameElements();
		this.pCodesinfosRootCodes = new CodesinfosRootCodesElements();
		this.pEString = new EStringElements();
		this.pCodesinfosRootCodesItems = new CodesinfosRootCodesItemsElements();
		this.pCodesinfosRootCodesItemsName = new CodesinfosRootCodesItemsNameElements();
		this.pCodesinfosRootCodesItemsClassname = new CodesinfosRootCodesItemsClassnameElements();
		this.pCodesinfosRootCodesItemsNodename = new CodesinfosRootCodesItemsNodenameElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.INT");
		this.pVALID_STRING = new VALID_STRINGElements();
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.STRING");
		this.tE_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.E_INT");
		this.pKEYWORD = new KEYWORDElements();
		this.tE_DOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "codesinfos.codesinfos.Codesinfos.E_DOUBLE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("codesinfos.codesinfos.Codesinfos".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////EClass CodesinfosRoot
	//CodesinfosRoot:
	//	{CodesinfosRoot}
	//	//EReference is not a keyword
	//	'{' (codesinfosRoot+=CodesinfosRootPropertiesAbstract ("," codesinfosRoot+=CodesinfosRootPropertiesAbstract)*)? '}';
	public CodesinfosRootElements getCodesinfosRootAccess() {
		return pCodesinfosRoot;
	}
	
	public ParserRule getCodesinfosRootRule() {
		return getCodesinfosRootAccess().getRule();
	}
	
	//CodesinfosRootPropertiesAbstract:
	//	CodesinfosRootName | CodesinfosRootCodes;
	public CodesinfosRootPropertiesAbstractElements getCodesinfosRootPropertiesAbstractAccess() {
		return pCodesinfosRootPropertiesAbstract;
	}
	
	public ParserRule getCodesinfosRootPropertiesAbstractRule() {
		return getCodesinfosRootPropertiesAbstractAccess().getRule();
	}
	
	//CodesinfosRootCodesItemsPropertiesAbstract:
	//	CodesinfosRootCodesItemsName | CodesinfosRootCodesItemsClassname | CodesinfosRootCodesItemsNodename;
	public CodesinfosRootCodesItemsPropertiesAbstractElements getCodesinfosRootCodesItemsPropertiesAbstractAccess() {
		return pCodesinfosRootCodesItemsPropertiesAbstract;
	}
	
	public ParserRule getCodesinfosRootCodesItemsPropertiesAbstractRule() {
		return getCodesinfosRootCodesItemsPropertiesAbstractAccess().getRule();
	}
	
	////EClass CodesinfosRootName
	//CodesinfosRootName:
	//	{CodesinfosRootName}
	//	//Keyword´s Name
	//	//Keywords
	//	'"name"' ':'
	//	name=EString;
	public CodesinfosRootNameElements getCodesinfosRootNameAccess() {
		return pCodesinfosRootName;
	}
	
	public ParserRule getCodesinfosRootNameRule() {
		return getCodesinfosRootNameAccess().getRule();
	}
	
	////EClass CodesinfosRootCodes
	//CodesinfosRootCodes:
	//	{CodesinfosRootCodes}
	//	//Keywords
	//	'"codes"' ':'
	//	'[' (codes+=CodesinfosRootCodesItems ("," codes+=CodesinfosRootCodesItems)*)? ']';
	public CodesinfosRootCodesElements getCodesinfosRootCodesAccess() {
		return pCodesinfosRootCodes;
	}
	
	public ParserRule getCodesinfosRootCodesRule() {
		return getCodesinfosRootCodesAccess().getRule();
	}
	
	//EString:
	//	VALID_STRING;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	////EClass CodesinfosRootCodesItems
	//CodesinfosRootCodesItems:
	//	{CodesinfosRootCodesItems}
	//	//EReference is not a keyword
	//	'{' (items+=CodesinfosRootCodesItemsPropertiesAbstract ("," items+=CodesinfosRootCodesItemsPropertiesAbstract)*)? '}';
	public CodesinfosRootCodesItemsElements getCodesinfosRootCodesItemsAccess() {
		return pCodesinfosRootCodesItems;
	}
	
	public ParserRule getCodesinfosRootCodesItemsRule() {
		return getCodesinfosRootCodesItemsAccess().getRule();
	}
	
	////EClass CodesinfosRootCodesItemsName
	//CodesinfosRootCodesItemsName:
	//	{CodesinfosRootCodesItemsName}
	//	//Keyword´s Name
	//	//Keywords
	//	'"name"' ':'
	//	name=EString;
	public CodesinfosRootCodesItemsNameElements getCodesinfosRootCodesItemsNameAccess() {
		return pCodesinfosRootCodesItemsName;
	}
	
	public ParserRule getCodesinfosRootCodesItemsNameRule() {
		return getCodesinfosRootCodesItemsNameAccess().getRule();
	}
	
	////EClass CodesinfosRootCodesItemsClassname
	//CodesinfosRootCodesItemsClassname: //Keywords
	//	'"classname"' ':' classname=EString;
	public CodesinfosRootCodesItemsClassnameElements getCodesinfosRootCodesItemsClassnameAccess() {
		return pCodesinfosRootCodesItemsClassname;
	}
	
	public ParserRule getCodesinfosRootCodesItemsClassnameRule() {
		return getCodesinfosRootCodesItemsClassnameAccess().getRule();
	}
	
	////EClass CodesinfosRootCodesItemsNodename
	//CodesinfosRootCodesItemsNodename: //Keywords
	//	'"nodename"' ':' nodename=EString;
	public CodesinfosRootCodesItemsNodenameElements getCodesinfosRootCodesItemsNodenameAccess() {
		return pCodesinfosRootCodesItemsNodename;
	}
	
	public ParserRule getCodesinfosRootCodesItemsNodenameRule() {
		return getCodesinfosRootCodesItemsNodenameAccess().getRule();
	}
	
	//@Override
	//terminal INT returns ecore::EInt:
	//	'0' | '1'..'9' '0'..'9'*;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//VALID_STRING:
	//	STRING | KEYWORD;
	public VALID_STRINGElements getVALID_STRINGAccess() {
		return pVALID_STRING;
	}
	
	public ParserRule getVALID_STRINGRule() {
		return getVALID_STRINGAccess().getRule();
	}
	
	//@Override
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"';
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal E_INT:
	//	'-'? INT;
	public TerminalRule getE_INTRule() {
		return tE_INT;
	}
	
	//KEYWORD:
	//	'"codes"' |
	//	'"nodename"' |
	//	'"classname"' |
	//	'"name"';
	public KEYWORDElements getKEYWORDAccess() {
		return pKEYWORD;
	}
	
	public ParserRule getKEYWORDRule() {
		return getKEYWORDAccess().getRule();
	}
	
	//terminal E_DOUBLE:
	//	'-'? INT ('.' INT+)? (('E' | 'e') ('+' | '-')? INT)?;
	public TerminalRule getE_DOUBLERule() {
		return tE_DOUBLE;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}

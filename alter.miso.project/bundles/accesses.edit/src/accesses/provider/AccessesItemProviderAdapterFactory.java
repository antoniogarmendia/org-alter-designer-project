/**
 */
package accesses.provider;

import accesses.util.AccessesAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class AccessesItemProviderAdapterFactory extends AccessesAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public AccessesItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootItemProvider accessesRootItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootAdapter() {
		if (accessesRootItemProvider == null) {
			accessesRootItemProvider = new AccessesRootItemProvider(this);
		}

		return accessesRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemProvider accessesRootExternalAccessItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessAdapter() {
		if (accessesRootExternalAccessItemProvider == null) {
			accessesRootExternalAccessItemProvider = new AccessesRootExternalAccessItemProvider(this);
		}

		return accessesRootExternalAccessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItems} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsItemProvider accessesRootExternalAccessItemsItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItems}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsAdapter() {
		if (accessesRootExternalAccessItemsItemProvider == null) {
			accessesRootExternalAccessItemsItemProvider = new AccessesRootExternalAccessItemsItemProvider(this);
		}

		return accessesRootExternalAccessItemsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsName} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsNameItemProvider accessesRootExternalAccessItemsNameItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsName}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsNameAdapter() {
		if (accessesRootExternalAccessItemsNameItemProvider == null) {
			accessesRootExternalAccessItemsNameItemProvider = new AccessesRootExternalAccessItemsNameItemProvider(this);
		}

		return accessesRootExternalAccessItemsNameItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsPath} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsPathItemProvider accessesRootExternalAccessItemsPathItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsPath}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsPathAdapter() {
		if (accessesRootExternalAccessItemsPathItemProvider == null) {
			accessesRootExternalAccessItemsPathItemProvider = new AccessesRootExternalAccessItemsPathItemProvider(this);
		}

		return accessesRootExternalAccessItemsPathItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsOntological} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsOntologicalItemProvider accessesRootExternalAccessItemsOntologicalItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsOntological}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsOntologicalAdapter() {
		if (accessesRootExternalAccessItemsOntologicalItemProvider == null) {
			accessesRootExternalAccessItemsOntologicalItemProvider = new AccessesRootExternalAccessItemsOntologicalItemProvider(this);
		}

		return accessesRootExternalAccessItemsOntologicalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsClassname} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsClassnameItemProvider accessesRootExternalAccessItemsClassnameItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsClassname}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsClassnameAdapter() {
		if (accessesRootExternalAccessItemsClassnameItemProvider == null) {
			accessesRootExternalAccessItemsClassnameItemProvider = new AccessesRootExternalAccessItemsClassnameItemProvider(this);
		}

		return accessesRootExternalAccessItemsClassnameItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsMethod} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsMethodItemProvider accessesRootExternalAccessItemsMethodItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsMethod}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsMethodAdapter() {
		if (accessesRootExternalAccessItemsMethodItemProvider == null) {
			accessesRootExternalAccessItemsMethodItemProvider = new AccessesRootExternalAccessItemsMethodItemProvider(this);
		}

		return accessesRootExternalAccessItemsMethodItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsAuth} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsAuthItemProvider accessesRootExternalAccessItemsAuthItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsAuth}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsAuthAdapter() {
		if (accessesRootExternalAccessItemsAuthItemProvider == null) {
			accessesRootExternalAccessItemsAuthItemProvider = new AccessesRootExternalAccessItemsAuthItemProvider(this);
		}

		return accessesRootExternalAccessItemsAuthItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsInput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsInputItemProvider accessesRootExternalAccessItemsInputItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsInput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsInputAdapter() {
		if (accessesRootExternalAccessItemsInputItemProvider == null) {
			accessesRootExternalAccessItemsInputItemProvider = new AccessesRootExternalAccessItemsInputItemProvider(this);
		}

		return accessesRootExternalAccessItemsInputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsInputItems} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsInputItemsItemProvider accessesRootExternalAccessItemsInputItemsItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsInputItems}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsInputItemsAdapter() {
		if (accessesRootExternalAccessItemsInputItemsItemProvider == null) {
			accessesRootExternalAccessItemsInputItemsItemProvider = new AccessesRootExternalAccessItemsInputItemsItemProvider(this);
		}

		return accessesRootExternalAccessItemsInputItemsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsInputItemsAttr} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsInputItemsAttrItemProvider accessesRootExternalAccessItemsInputItemsAttrItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsInputItemsAttr}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsInputItemsAttrAdapter() {
		if (accessesRootExternalAccessItemsInputItemsAttrItemProvider == null) {
			accessesRootExternalAccessItemsInputItemsAttrItemProvider = new AccessesRootExternalAccessItemsInputItemsAttrItemProvider(this);
		}

		return accessesRootExternalAccessItemsInputItemsAttrItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsInputItemsAPIInput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsInputItemsAPIInputItemProvider accessesRootExternalAccessItemsInputItemsAPIInputItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsInputItemsAPIInput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsInputItemsAPIInputAdapter() {
		if (accessesRootExternalAccessItemsInputItemsAPIInputItemProvider == null) {
			accessesRootExternalAccessItemsInputItemsAPIInputItemProvider = new AccessesRootExternalAccessItemsInputItemsAPIInputItemProvider(this);
		}

		return accessesRootExternalAccessItemsInputItemsAPIInputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsInputItemsWay} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsInputItemsWayItemProvider accessesRootExternalAccessItemsInputItemsWayItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsInputItemsWay}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsInputItemsWayAdapter() {
		if (accessesRootExternalAccessItemsInputItemsWayItemProvider == null) {
			accessesRootExternalAccessItemsInputItemsWayItemProvider = new AccessesRootExternalAccessItemsInputItemsWayItemProvider(this);
		}

		return accessesRootExternalAccessItemsInputItemsWayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsInputItemsValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsInputItemsValueItemProvider accessesRootExternalAccessItemsInputItemsValueItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsInputItemsValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsInputItemsValueAdapter() {
		if (accessesRootExternalAccessItemsInputItemsValueItemProvider == null) {
			accessesRootExternalAccessItemsInputItemsValueItemProvider = new AccessesRootExternalAccessItemsInputItemsValueItemProvider(this);
		}

		return accessesRootExternalAccessItemsInputItemsValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsOutput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsOutputItemProvider accessesRootExternalAccessItemsOutputItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsOutput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsOutputAdapter() {
		if (accessesRootExternalAccessItemsOutputItemProvider == null) {
			accessesRootExternalAccessItemsOutputItemProvider = new AccessesRootExternalAccessItemsOutputItemProvider(this);
		}

		return accessesRootExternalAccessItemsOutputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsOutputItems} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsOutputItemsItemProvider accessesRootExternalAccessItemsOutputItemsItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsOutputItems}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsOutputItemsAdapter() {
		if (accessesRootExternalAccessItemsOutputItemsItemProvider == null) {
			accessesRootExternalAccessItemsOutputItemsItemProvider = new AccessesRootExternalAccessItemsOutputItemsItemProvider(this);
		}

		return accessesRootExternalAccessItemsOutputItemsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsOutputItemsAttr} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsOutputItemsAttrItemProvider accessesRootExternalAccessItemsOutputItemsAttrItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsOutputItemsAttr}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsOutputItemsAttrAdapter() {
		if (accessesRootExternalAccessItemsOutputItemsAttrItemProvider == null) {
			accessesRootExternalAccessItemsOutputItemsAttrItemProvider = new AccessesRootExternalAccessItemsOutputItemsAttrItemProvider(this);
		}

		return accessesRootExternalAccessItemsOutputItemsAttrItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsOutputItemsAPIOutput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsOutputItemsAPIOutputItemProvider accessesRootExternalAccessItemsOutputItemsAPIOutputItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsOutputItemsAPIOutput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsOutputItemsAPIOutputAdapter() {
		if (accessesRootExternalAccessItemsOutputItemsAPIOutputItemProvider == null) {
			accessesRootExternalAccessItemsOutputItemsAPIOutputItemProvider = new AccessesRootExternalAccessItemsOutputItemsAPIOutputItemProvider(this);
		}

		return accessesRootExternalAccessItemsOutputItemsAPIOutputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsBody} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsBodyItemProvider accessesRootExternalAccessItemsBodyItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsBody}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsBodyAdapter() {
		if (accessesRootExternalAccessItemsBodyItemProvider == null) {
			accessesRootExternalAccessItemsBodyItemProvider = new AccessesRootExternalAccessItemsBodyItemProvider(this);
		}

		return accessesRootExternalAccessItemsBodyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsBodyItems} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsBodyItemsItemProvider accessesRootExternalAccessItemsBodyItemsItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsBodyItems}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsBodyItemsAdapter() {
		if (accessesRootExternalAccessItemsBodyItemsItemProvider == null) {
			accessesRootExternalAccessItemsBodyItemsItemProvider = new AccessesRootExternalAccessItemsBodyItemsItemProvider(this);
		}

		return accessesRootExternalAccessItemsBodyItemsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsBodyItemsAttr} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsBodyItemsAttrItemProvider accessesRootExternalAccessItemsBodyItemsAttrItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsBodyItemsAttr}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsBodyItemsAttrAdapter() {
		if (accessesRootExternalAccessItemsBodyItemsAttrItemProvider == null) {
			accessesRootExternalAccessItemsBodyItemsAttrItemProvider = new AccessesRootExternalAccessItemsBodyItemsAttrItemProvider(this);
		}

		return accessesRootExternalAccessItemsBodyItemsAttrItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsBodyItemsAPIBody} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsBodyItemsAPIBodyItemProvider accessesRootExternalAccessItemsBodyItemsAPIBodyItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsBodyItemsAPIBody}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsBodyItemsAPIBodyAdapter() {
		if (accessesRootExternalAccessItemsBodyItemsAPIBodyItemProvider == null) {
			accessesRootExternalAccessItemsBodyItemsAPIBodyItemProvider = new AccessesRootExternalAccessItemsBodyItemsAPIBodyItemProvider(this);
		}

		return accessesRootExternalAccessItemsBodyItemsAPIBodyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsTrigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsTriggerItemProvider accessesRootExternalAccessItemsTriggerItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsTrigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsTriggerAdapter() {
		if (accessesRootExternalAccessItemsTriggerItemProvider == null) {
			accessesRootExternalAccessItemsTriggerItemProvider = new AccessesRootExternalAccessItemsTriggerItemProvider(this);
		}

		return accessesRootExternalAccessItemsTriggerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsTriggerOnChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsTriggerOnChangeItemProvider accessesRootExternalAccessItemsTriggerOnChangeItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsTriggerOnChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsTriggerOnChangeAdapter() {
		if (accessesRootExternalAccessItemsTriggerOnChangeItemProvider == null) {
			accessesRootExternalAccessItemsTriggerOnChangeItemProvider = new AccessesRootExternalAccessItemsTriggerOnChangeItemProvider(this);
		}

		return accessesRootExternalAccessItemsTriggerOnChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsTriggerOnCreate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsTriggerOnCreateItemProvider accessesRootExternalAccessItemsTriggerOnCreateItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsTriggerOnCreate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsTriggerOnCreateAdapter() {
		if (accessesRootExternalAccessItemsTriggerOnCreateItemProvider == null) {
			accessesRootExternalAccessItemsTriggerOnCreateItemProvider = new AccessesRootExternalAccessItemsTriggerOnCreateItemProvider(this);
		}

		return accessesRootExternalAccessItemsTriggerOnCreateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsTriggerOnMove} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsTriggerOnMoveItemProvider accessesRootExternalAccessItemsTriggerOnMoveItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsTriggerOnMove}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsTriggerOnMoveAdapter() {
		if (accessesRootExternalAccessItemsTriggerOnMoveItemProvider == null) {
			accessesRootExternalAccessItemsTriggerOnMoveItemProvider = new AccessesRootExternalAccessItemsTriggerOnMoveItemProvider(this);
		}

		return accessesRootExternalAccessItemsTriggerOnMoveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsTriggerOnDelete} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsTriggerOnDeleteItemProvider accessesRootExternalAccessItemsTriggerOnDeleteItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsTriggerOnDelete}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsTriggerOnDeleteAdapter() {
		if (accessesRootExternalAccessItemsTriggerOnDeleteItemProvider == null) {
			accessesRootExternalAccessItemsTriggerOnDeleteItemProvider = new AccessesRootExternalAccessItemsTriggerOnDeleteItemProvider(this);
		}

		return accessesRootExternalAccessItemsTriggerOnDeleteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsTriggerOnAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsTriggerOnAccessItemProvider accessesRootExternalAccessItemsTriggerOnAccessItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsTriggerOnAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsTriggerOnAccessAdapter() {
		if (accessesRootExternalAccessItemsTriggerOnAccessItemProvider == null) {
			accessesRootExternalAccessItemsTriggerOnAccessItemProvider = new AccessesRootExternalAccessItemsTriggerOnAccessItemProvider(this);
		}

		return accessesRootExternalAccessItemsTriggerOnAccessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsTriggerOnLoad} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsTriggerOnLoadItemProvider accessesRootExternalAccessItemsTriggerOnLoadItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsTriggerOnLoad}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsTriggerOnLoadAdapter() {
		if (accessesRootExternalAccessItemsTriggerOnLoadItemProvider == null) {
			accessesRootExternalAccessItemsTriggerOnLoadItemProvider = new AccessesRootExternalAccessItemsTriggerOnLoadItemProvider(this);
		}

		return accessesRootExternalAccessItemsTriggerOnLoadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link accesses.AccessesRootExternalAccessItemsTriggerTimeTrigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessesRootExternalAccessItemsTriggerTimeTriggerItemProvider accessesRootExternalAccessItemsTriggerTimeTriggerItemProvider;

	/**
	 * This creates an adapter for a {@link accesses.AccessesRootExternalAccessItemsTriggerTimeTrigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessesRootExternalAccessItemsTriggerTimeTriggerAdapter() {
		if (accessesRootExternalAccessItemsTriggerTimeTriggerItemProvider == null) {
			accessesRootExternalAccessItemsTriggerTimeTriggerItemProvider = new AccessesRootExternalAccessItemsTriggerTimeTriggerItemProvider(this);
		}

		return accessesRootExternalAccessItemsTriggerTimeTriggerItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (accessesRootItemProvider != null) accessesRootItemProvider.dispose();
		if (accessesRootExternalAccessItemProvider != null) accessesRootExternalAccessItemProvider.dispose();
		if (accessesRootExternalAccessItemsItemProvider != null) accessesRootExternalAccessItemsItemProvider.dispose();
		if (accessesRootExternalAccessItemsNameItemProvider != null) accessesRootExternalAccessItemsNameItemProvider.dispose();
		if (accessesRootExternalAccessItemsPathItemProvider != null) accessesRootExternalAccessItemsPathItemProvider.dispose();
		if (accessesRootExternalAccessItemsOntologicalItemProvider != null) accessesRootExternalAccessItemsOntologicalItemProvider.dispose();
		if (accessesRootExternalAccessItemsClassnameItemProvider != null) accessesRootExternalAccessItemsClassnameItemProvider.dispose();
		if (accessesRootExternalAccessItemsMethodItemProvider != null) accessesRootExternalAccessItemsMethodItemProvider.dispose();
		if (accessesRootExternalAccessItemsAuthItemProvider != null) accessesRootExternalAccessItemsAuthItemProvider.dispose();
		if (accessesRootExternalAccessItemsInputItemProvider != null) accessesRootExternalAccessItemsInputItemProvider.dispose();
		if (accessesRootExternalAccessItemsInputItemsItemProvider != null) accessesRootExternalAccessItemsInputItemsItemProvider.dispose();
		if (accessesRootExternalAccessItemsInputItemsAttrItemProvider != null) accessesRootExternalAccessItemsInputItemsAttrItemProvider.dispose();
		if (accessesRootExternalAccessItemsInputItemsAPIInputItemProvider != null) accessesRootExternalAccessItemsInputItemsAPIInputItemProvider.dispose();
		if (accessesRootExternalAccessItemsInputItemsWayItemProvider != null) accessesRootExternalAccessItemsInputItemsWayItemProvider.dispose();
		if (accessesRootExternalAccessItemsInputItemsValueItemProvider != null) accessesRootExternalAccessItemsInputItemsValueItemProvider.dispose();
		if (accessesRootExternalAccessItemsOutputItemProvider != null) accessesRootExternalAccessItemsOutputItemProvider.dispose();
		if (accessesRootExternalAccessItemsOutputItemsItemProvider != null) accessesRootExternalAccessItemsOutputItemsItemProvider.dispose();
		if (accessesRootExternalAccessItemsOutputItemsAttrItemProvider != null) accessesRootExternalAccessItemsOutputItemsAttrItemProvider.dispose();
		if (accessesRootExternalAccessItemsOutputItemsAPIOutputItemProvider != null) accessesRootExternalAccessItemsOutputItemsAPIOutputItemProvider.dispose();
		if (accessesRootExternalAccessItemsBodyItemProvider != null) accessesRootExternalAccessItemsBodyItemProvider.dispose();
		if (accessesRootExternalAccessItemsBodyItemsItemProvider != null) accessesRootExternalAccessItemsBodyItemsItemProvider.dispose();
		if (accessesRootExternalAccessItemsBodyItemsAttrItemProvider != null) accessesRootExternalAccessItemsBodyItemsAttrItemProvider.dispose();
		if (accessesRootExternalAccessItemsBodyItemsAPIBodyItemProvider != null) accessesRootExternalAccessItemsBodyItemsAPIBodyItemProvider.dispose();
		if (accessesRootExternalAccessItemsTriggerItemProvider != null) accessesRootExternalAccessItemsTriggerItemProvider.dispose();
		if (accessesRootExternalAccessItemsTriggerOnChangeItemProvider != null) accessesRootExternalAccessItemsTriggerOnChangeItemProvider.dispose();
		if (accessesRootExternalAccessItemsTriggerOnCreateItemProvider != null) accessesRootExternalAccessItemsTriggerOnCreateItemProvider.dispose();
		if (accessesRootExternalAccessItemsTriggerOnMoveItemProvider != null) accessesRootExternalAccessItemsTriggerOnMoveItemProvider.dispose();
		if (accessesRootExternalAccessItemsTriggerOnDeleteItemProvider != null) accessesRootExternalAccessItemsTriggerOnDeleteItemProvider.dispose();
		if (accessesRootExternalAccessItemsTriggerOnAccessItemProvider != null) accessesRootExternalAccessItemsTriggerOnAccessItemProvider.dispose();
		if (accessesRootExternalAccessItemsTriggerOnLoadItemProvider != null) accessesRootExternalAccessItemsTriggerOnLoadItemProvider.dispose();
		if (accessesRootExternalAccessItemsTriggerTimeTriggerItemProvider != null) accessesRootExternalAccessItemsTriggerTimeTriggerItemProvider.dispose();
	}

}

/*
 * generated by Xtext 2.23.0
 */
package graphic.graphic.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GraphicGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class GraphicRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cGraphicRootAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cGraphicRootGraphicRootPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cGraphicRootAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cGraphicRootAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cGraphicRootGraphicRootPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cGraphicRootAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass GraphicRoot
		//GraphicRoot:
		//	{GraphicRoot}
		//	//EReference is not a keyword
		//	'{' (graphicRoot+=GraphicRootPropertiesAbstract ("," graphicRoot+=GraphicRootPropertiesAbstract)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRoot} //EReference is not a keyword
		//'{' (graphicRoot+=GraphicRootPropertiesAbstract ("," graphicRoot+=GraphicRootPropertiesAbstract)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{GraphicRoot}
		public Action getGraphicRootAction_0() { return cGraphicRootAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(graphicRoot+=GraphicRootPropertiesAbstract ("," graphicRoot+=GraphicRootPropertiesAbstract)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//graphicRoot+=GraphicRootPropertiesAbstract
		public Assignment getGraphicRootAssignment_2_0() { return cGraphicRootAssignment_2_0; }
		
		//GraphicRootPropertiesAbstract
		public RuleCall getGraphicRootGraphicRootPropertiesAbstractParserRuleCall_2_0_0() { return cGraphicRootGraphicRootPropertiesAbstractParserRuleCall_2_0_0; }
		
		//("," graphicRoot+=GraphicRootPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//graphicRoot+=GraphicRootPropertiesAbstract
		public Assignment getGraphicRootAssignment_2_1_1() { return cGraphicRootAssignment_2_1_1; }
		
		//GraphicRootPropertiesAbstract
		public RuleCall getGraphicRootGraphicRootPropertiesAbstractParserRuleCall_2_1_1_0() { return cGraphicRootGraphicRootPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class GraphicRootPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGraphicRootNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGraphicRootURIParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGraphicRootClassesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//GraphicRootPropertiesAbstract:
		//	GraphicRootName | GraphicRootURI | GraphicRootClasses;
		@Override public ParserRule getRule() { return rule; }
		
		//GraphicRootName | GraphicRootURI | GraphicRootClasses
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GraphicRootName
		public RuleCall getGraphicRootNameParserRuleCall_0() { return cGraphicRootNameParserRuleCall_0; }
		
		//GraphicRootURI
		public RuleCall getGraphicRootURIParserRuleCall_1() { return cGraphicRootURIParserRuleCall_1; }
		
		//GraphicRootClasses
		public RuleCall getGraphicRootClassesParserRuleCall_2() { return cGraphicRootClassesParserRuleCall_2; }
	}
	public class GraphicRootClassesItemsPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGraphicRootClassesItemsNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGraphicRootClassesItemsVersionsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGraphicRootClassesItemsVnameParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGraphicRootClassesItemsShowAttributesParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cGraphicRootClassesItemsMaterialAttributesParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cGraphicRootClassesItemsConstraintsParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cGraphicRootClassesItemsConnectionsParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//GraphicRootClassesItemsPropertiesAbstract:
		//	GraphicRootClassesItemsName | GraphicRootClassesItemsVersions | GraphicRootClassesItemsVname |
		//	GraphicRootClassesItemsShowAttributes | GraphicRootClassesItemsMaterialAttributes |
		//	GraphicRootClassesItemsConstraints | GraphicRootClassesItemsConnections;
		@Override public ParserRule getRule() { return rule; }
		
		//GraphicRootClassesItemsName | GraphicRootClassesItemsVersions | GraphicRootClassesItemsVname |
		//GraphicRootClassesItemsShowAttributes | GraphicRootClassesItemsMaterialAttributes | GraphicRootClassesItemsConstraints
		//| GraphicRootClassesItemsConnections
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GraphicRootClassesItemsName
		public RuleCall getGraphicRootClassesItemsNameParserRuleCall_0() { return cGraphicRootClassesItemsNameParserRuleCall_0; }
		
		//GraphicRootClassesItemsVersions
		public RuleCall getGraphicRootClassesItemsVersionsParserRuleCall_1() { return cGraphicRootClassesItemsVersionsParserRuleCall_1; }
		
		//GraphicRootClassesItemsVname
		public RuleCall getGraphicRootClassesItemsVnameParserRuleCall_2() { return cGraphicRootClassesItemsVnameParserRuleCall_2; }
		
		//GraphicRootClassesItemsShowAttributes
		public RuleCall getGraphicRootClassesItemsShowAttributesParserRuleCall_3() { return cGraphicRootClassesItemsShowAttributesParserRuleCall_3; }
		
		//GraphicRootClassesItemsMaterialAttributes
		public RuleCall getGraphicRootClassesItemsMaterialAttributesParserRuleCall_4() { return cGraphicRootClassesItemsMaterialAttributesParserRuleCall_4; }
		
		//GraphicRootClassesItemsConstraints
		public RuleCall getGraphicRootClassesItemsConstraintsParserRuleCall_5() { return cGraphicRootClassesItemsConstraintsParserRuleCall_5; }
		
		//GraphicRootClassesItemsConnections
		public RuleCall getGraphicRootClassesItemsConnectionsParserRuleCall_6() { return cGraphicRootClassesItemsConnectionsParserRuleCall_6; }
	}
	public class GraphicRootClassesItemsVersionsPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsVersionsPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGraphicRootClassesItemsVersionsV1ParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGraphicRootClassesItemsVersionsV2ParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGraphicRootClassesItemsVersionsV3ParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//GraphicRootClassesItemsVersionsPropertiesAbstract:
		//	GraphicRootClassesItemsVersionsV1 | GraphicRootClassesItemsVersionsV2 | GraphicRootClassesItemsVersionsV3;
		@Override public ParserRule getRule() { return rule; }
		
		//GraphicRootClassesItemsVersionsV1 | GraphicRootClassesItemsVersionsV2 | GraphicRootClassesItemsVersionsV3
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GraphicRootClassesItemsVersionsV1
		public RuleCall getGraphicRootClassesItemsVersionsV1ParserRuleCall_0() { return cGraphicRootClassesItemsVersionsV1ParserRuleCall_0; }
		
		//GraphicRootClassesItemsVersionsV2
		public RuleCall getGraphicRootClassesItemsVersionsV2ParserRuleCall_1() { return cGraphicRootClassesItemsVersionsV2ParserRuleCall_1; }
		
		//GraphicRootClassesItemsVersionsV3
		public RuleCall getGraphicRootClassesItemsVersionsV3ParserRuleCall_2() { return cGraphicRootClassesItemsVersionsV3ParserRuleCall_2; }
	}
	public class GraphicRootClassesItemsVnamePropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsVnamePropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGraphicRootClassesItemsVnameV1ParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGraphicRootClassesItemsVnameV2ParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGraphicRootClassesItemsVnameV3ParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//GraphicRootClassesItemsVnamePropertiesAbstract:
		//	GraphicRootClassesItemsVnameV1 | GraphicRootClassesItemsVnameV2 | GraphicRootClassesItemsVnameV3;
		@Override public ParserRule getRule() { return rule; }
		
		//GraphicRootClassesItemsVnameV1 | GraphicRootClassesItemsVnameV2 | GraphicRootClassesItemsVnameV3
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GraphicRootClassesItemsVnameV1
		public RuleCall getGraphicRootClassesItemsVnameV1ParserRuleCall_0() { return cGraphicRootClassesItemsVnameV1ParserRuleCall_0; }
		
		//GraphicRootClassesItemsVnameV2
		public RuleCall getGraphicRootClassesItemsVnameV2ParserRuleCall_1() { return cGraphicRootClassesItemsVnameV2ParserRuleCall_1; }
		
		//GraphicRootClassesItemsVnameV3
		public RuleCall getGraphicRootClassesItemsVnameV3ParserRuleCall_2() { return cGraphicRootClassesItemsVnameV3ParserRuleCall_2; }
	}
	public class GraphicRootClassesItemsConstraintsPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGraphicRootClassesItemsConstraintsPlanesParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGraphicRootClassesItemsConstraintsIluminationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGraphicRootClassesItemsConstraintsSizeMaxParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGraphicRootClassesItemsConstraintsSizeMinParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cGraphicRootClassesItemsConstraintsSizeInitParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cGraphicRootClassesItemsConstraintsOverlappingParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cGraphicRootClassesItemsConstraintsXToOriginPosParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cGraphicRootClassesItemsConstraintsYToOriginPosParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cGraphicRootClassesItemsConstraintsZToOriginPosParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cGraphicRootClassesItemsConstraintsRotationParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cGraphicRootClassesItemsConstraintsTextParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cGraphicRootClassesItemsConstraintsTrimParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cGraphicRootClassesItemsConstraintsCategoryBitMaskParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cGraphicRootClassesItemsConstraintsCollisionBitMaskParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cGraphicRootClassesItemsConstraintsContactTestBitMaskParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		
		//GraphicRootClassesItemsConstraintsPropertiesAbstract:
		//	GraphicRootClassesItemsConstraintsPlanes | GraphicRootClassesItemsConstraintsIlumination |
		//	GraphicRootClassesItemsConstraintsSizeMax | GraphicRootClassesItemsConstraintsSizeMin |
		//	GraphicRootClassesItemsConstraintsSizeInit | GraphicRootClassesItemsConstraintsOverlapping |
		//	GraphicRootClassesItemsConstraintsXToOriginPos | GraphicRootClassesItemsConstraintsYToOriginPos |
		//	GraphicRootClassesItemsConstraintsZToOriginPos | GraphicRootClassesItemsConstraintsRotation |
		//	GraphicRootClassesItemsConstraintsText | GraphicRootClassesItemsConstraintsTrim |
		//	GraphicRootClassesItemsConstraintsCategoryBitMask | GraphicRootClassesItemsConstraintsCollisionBitMask |
		//	GraphicRootClassesItemsConstraintsContactTestBitMask;
		@Override public ParserRule getRule() { return rule; }
		
		//GraphicRootClassesItemsConstraintsPlanes | GraphicRootClassesItemsConstraintsIlumination |
		//GraphicRootClassesItemsConstraintsSizeMax | GraphicRootClassesItemsConstraintsSizeMin |
		//GraphicRootClassesItemsConstraintsSizeInit | GraphicRootClassesItemsConstraintsOverlapping |
		//GraphicRootClassesItemsConstraintsXToOriginPos | GraphicRootClassesItemsConstraintsYToOriginPos |
		//GraphicRootClassesItemsConstraintsZToOriginPos | GraphicRootClassesItemsConstraintsRotation |
		//GraphicRootClassesItemsConstraintsText | GraphicRootClassesItemsConstraintsTrim |
		//GraphicRootClassesItemsConstraintsCategoryBitMask | GraphicRootClassesItemsConstraintsCollisionBitMask |
		//GraphicRootClassesItemsConstraintsContactTestBitMask
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GraphicRootClassesItemsConstraintsPlanes
		public RuleCall getGraphicRootClassesItemsConstraintsPlanesParserRuleCall_0() { return cGraphicRootClassesItemsConstraintsPlanesParserRuleCall_0; }
		
		//GraphicRootClassesItemsConstraintsIlumination
		public RuleCall getGraphicRootClassesItemsConstraintsIluminationParserRuleCall_1() { return cGraphicRootClassesItemsConstraintsIluminationParserRuleCall_1; }
		
		//GraphicRootClassesItemsConstraintsSizeMax
		public RuleCall getGraphicRootClassesItemsConstraintsSizeMaxParserRuleCall_2() { return cGraphicRootClassesItemsConstraintsSizeMaxParserRuleCall_2; }
		
		//GraphicRootClassesItemsConstraintsSizeMin
		public RuleCall getGraphicRootClassesItemsConstraintsSizeMinParserRuleCall_3() { return cGraphicRootClassesItemsConstraintsSizeMinParserRuleCall_3; }
		
		//GraphicRootClassesItemsConstraintsSizeInit
		public RuleCall getGraphicRootClassesItemsConstraintsSizeInitParserRuleCall_4() { return cGraphicRootClassesItemsConstraintsSizeInitParserRuleCall_4; }
		
		//GraphicRootClassesItemsConstraintsOverlapping
		public RuleCall getGraphicRootClassesItemsConstraintsOverlappingParserRuleCall_5() { return cGraphicRootClassesItemsConstraintsOverlappingParserRuleCall_5; }
		
		//GraphicRootClassesItemsConstraintsXToOriginPos
		public RuleCall getGraphicRootClassesItemsConstraintsXToOriginPosParserRuleCall_6() { return cGraphicRootClassesItemsConstraintsXToOriginPosParserRuleCall_6; }
		
		//GraphicRootClassesItemsConstraintsYToOriginPos
		public RuleCall getGraphicRootClassesItemsConstraintsYToOriginPosParserRuleCall_7() { return cGraphicRootClassesItemsConstraintsYToOriginPosParserRuleCall_7; }
		
		//GraphicRootClassesItemsConstraintsZToOriginPos
		public RuleCall getGraphicRootClassesItemsConstraintsZToOriginPosParserRuleCall_8() { return cGraphicRootClassesItemsConstraintsZToOriginPosParserRuleCall_8; }
		
		//GraphicRootClassesItemsConstraintsRotation
		public RuleCall getGraphicRootClassesItemsConstraintsRotationParserRuleCall_9() { return cGraphicRootClassesItemsConstraintsRotationParserRuleCall_9; }
		
		//GraphicRootClassesItemsConstraintsText
		public RuleCall getGraphicRootClassesItemsConstraintsTextParserRuleCall_10() { return cGraphicRootClassesItemsConstraintsTextParserRuleCall_10; }
		
		//GraphicRootClassesItemsConstraintsTrim
		public RuleCall getGraphicRootClassesItemsConstraintsTrimParserRuleCall_11() { return cGraphicRootClassesItemsConstraintsTrimParserRuleCall_11; }
		
		//GraphicRootClassesItemsConstraintsCategoryBitMask
		public RuleCall getGraphicRootClassesItemsConstraintsCategoryBitMaskParserRuleCall_12() { return cGraphicRootClassesItemsConstraintsCategoryBitMaskParserRuleCall_12; }
		
		//GraphicRootClassesItemsConstraintsCollisionBitMask
		public RuleCall getGraphicRootClassesItemsConstraintsCollisionBitMaskParserRuleCall_13() { return cGraphicRootClassesItemsConstraintsCollisionBitMaskParserRuleCall_13; }
		
		//GraphicRootClassesItemsConstraintsContactTestBitMask
		public RuleCall getGraphicRootClassesItemsConstraintsContactTestBitMaskParserRuleCall_14() { return cGraphicRootClassesItemsConstraintsContactTestBitMaskParserRuleCall_14; }
	}
	public class GraphicRootClassesItemsConnectionsItemsPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsColorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsTextColorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsDecoratorParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsDecoratorColorParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsDecoratorWidthParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsDecoratorPosParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsPatternParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsWidthParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsPositionParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cGraphicRootClassesItemsConnectionsItemsTargetParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		
		//GraphicRootClassesItemsConnectionsItemsPropertiesAbstract:
		//	GraphicRootClassesItemsConnectionsItemsName | GraphicRootClassesItemsConnectionsItemsType |
		//	GraphicRootClassesItemsConnectionsItemsColor | GraphicRootClassesItemsConnectionsItemsTextColor |
		//	GraphicRootClassesItemsConnectionsItemsDecorator | GraphicRootClassesItemsConnectionsItemsDecoratorColor |
		//	GraphicRootClassesItemsConnectionsItemsDecoratorWidth | GraphicRootClassesItemsConnectionsItemsDecoratorPos |
		//	GraphicRootClassesItemsConnectionsItemsPattern | GraphicRootClassesItemsConnectionsItemsWidth |
		//	GraphicRootClassesItemsConnectionsItemsPosition | GraphicRootClassesItemsConnectionsItemsTarget;
		@Override public ParserRule getRule() { return rule; }
		
		//GraphicRootClassesItemsConnectionsItemsName | GraphicRootClassesItemsConnectionsItemsType |
		//GraphicRootClassesItemsConnectionsItemsColor | GraphicRootClassesItemsConnectionsItemsTextColor |
		//GraphicRootClassesItemsConnectionsItemsDecorator | GraphicRootClassesItemsConnectionsItemsDecoratorColor |
		//GraphicRootClassesItemsConnectionsItemsDecoratorWidth | GraphicRootClassesItemsConnectionsItemsDecoratorPos |
		//GraphicRootClassesItemsConnectionsItemsPattern | GraphicRootClassesItemsConnectionsItemsWidth |
		//GraphicRootClassesItemsConnectionsItemsPosition | GraphicRootClassesItemsConnectionsItemsTarget
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GraphicRootClassesItemsConnectionsItemsName
		public RuleCall getGraphicRootClassesItemsConnectionsItemsNameParserRuleCall_0() { return cGraphicRootClassesItemsConnectionsItemsNameParserRuleCall_0; }
		
		//GraphicRootClassesItemsConnectionsItemsType
		public RuleCall getGraphicRootClassesItemsConnectionsItemsTypeParserRuleCall_1() { return cGraphicRootClassesItemsConnectionsItemsTypeParserRuleCall_1; }
		
		//GraphicRootClassesItemsConnectionsItemsColor
		public RuleCall getGraphicRootClassesItemsConnectionsItemsColorParserRuleCall_2() { return cGraphicRootClassesItemsConnectionsItemsColorParserRuleCall_2; }
		
		//GraphicRootClassesItemsConnectionsItemsTextColor
		public RuleCall getGraphicRootClassesItemsConnectionsItemsTextColorParserRuleCall_3() { return cGraphicRootClassesItemsConnectionsItemsTextColorParserRuleCall_3; }
		
		//GraphicRootClassesItemsConnectionsItemsDecorator
		public RuleCall getGraphicRootClassesItemsConnectionsItemsDecoratorParserRuleCall_4() { return cGraphicRootClassesItemsConnectionsItemsDecoratorParserRuleCall_4; }
		
		//GraphicRootClassesItemsConnectionsItemsDecoratorColor
		public RuleCall getGraphicRootClassesItemsConnectionsItemsDecoratorColorParserRuleCall_5() { return cGraphicRootClassesItemsConnectionsItemsDecoratorColorParserRuleCall_5; }
		
		//GraphicRootClassesItemsConnectionsItemsDecoratorWidth
		public RuleCall getGraphicRootClassesItemsConnectionsItemsDecoratorWidthParserRuleCall_6() { return cGraphicRootClassesItemsConnectionsItemsDecoratorWidthParserRuleCall_6; }
		
		//GraphicRootClassesItemsConnectionsItemsDecoratorPos
		public RuleCall getGraphicRootClassesItemsConnectionsItemsDecoratorPosParserRuleCall_7() { return cGraphicRootClassesItemsConnectionsItemsDecoratorPosParserRuleCall_7; }
		
		//GraphicRootClassesItemsConnectionsItemsPattern
		public RuleCall getGraphicRootClassesItemsConnectionsItemsPatternParserRuleCall_8() { return cGraphicRootClassesItemsConnectionsItemsPatternParserRuleCall_8; }
		
		//GraphicRootClassesItemsConnectionsItemsWidth
		public RuleCall getGraphicRootClassesItemsConnectionsItemsWidthParserRuleCall_9() { return cGraphicRootClassesItemsConnectionsItemsWidthParserRuleCall_9; }
		
		//GraphicRootClassesItemsConnectionsItemsPosition
		public RuleCall getGraphicRootClassesItemsConnectionsItemsPositionParserRuleCall_10() { return cGraphicRootClassesItemsConnectionsItemsPositionParserRuleCall_10; }
		
		//GraphicRootClassesItemsConnectionsItemsTarget
		public RuleCall getGraphicRootClassesItemsConnectionsItemsTargetParserRuleCall_11() { return cGraphicRootClassesItemsConnectionsItemsTargetParserRuleCall_11; }
	}
	public class GraphicRootNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		////EClass GraphicRootName
		//GraphicRootName:
		//	{GraphicRootName}
		//	//Keyword´s Name
		//	//Keywords
		//	'"name"' ':'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootName} //Keyword´s Name
		////Keywords
		//'"name"' ':' name=EString
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootName}
		public Action getGraphicRootNameAction_0() { return cGraphicRootNameAction_0; }
		
		////Keyword´s Name
		////Keywords
		//'"name"'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}
	public class GraphicRootURIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootURI");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cURIKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cURIAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cURIEStringParserRuleCall_2_0 = (RuleCall)cURIAssignment_2.eContents().get(0);
		
		////EClass GraphicRootURI
		//GraphicRootURI: //Keywords
		//	'"URI"' ':' URI=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"URI"' ':' URI=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"URI"'
		public Keyword getURIKeyword_0() { return cURIKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//URI=EString
		public Assignment getURIAssignment_2() { return cURIAssignment_2; }
		
		//EString
		public RuleCall getURIEStringParserRuleCall_2_0() { return cURIEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClasses");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClassesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cClassesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cClassesGraphicRootClassesItemsParserRuleCall_4_0_0 = (RuleCall)cClassesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cClassesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cClassesGraphicRootClassesItemsParserRuleCall_4_1_1_0 = (RuleCall)cClassesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass GraphicRootClasses
		//GraphicRootClasses:
		//	{GraphicRootClasses}
		//	//Keywords
		//	'"classes"' ':'
		//	'[' (classes+=GraphicRootClassesItems ("," classes+=GraphicRootClassesItems)*)? ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClasses} //Keywords
		//'"classes"' ':' '[' (classes+=GraphicRootClassesItems ("," classes+=GraphicRootClassesItems)*)? ']'
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClasses}
		public Action getGraphicRootClassesAction_0() { return cGraphicRootClassesAction_0; }
		
		////Keywords
		//'"classes"'
		public Keyword getClassesKeyword_1() { return cClassesKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(classes+=GraphicRootClassesItems ("," classes+=GraphicRootClassesItems)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//classes+=GraphicRootClassesItems
		public Assignment getClassesAssignment_4_0() { return cClassesAssignment_4_0; }
		
		//GraphicRootClassesItems
		public RuleCall getClassesGraphicRootClassesItemsParserRuleCall_4_0_0() { return cClassesGraphicRootClassesItemsParserRuleCall_4_0_0; }
		
		//("," classes+=GraphicRootClassesItems)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//classes+=GraphicRootClassesItems
		public Assignment getClassesAssignment_4_1_1() { return cClassesAssignment_4_1_1; }
		
		//GraphicRootClassesItems
		public RuleCall getClassesGraphicRootClassesItemsParserRuleCall_4_1_1_0() { return cClassesGraphicRootClassesItemsParserRuleCall_4_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.EString");
		private final RuleCall cVALID_STRINGParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString:
		//	VALID_STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//VALID_STRING
		public RuleCall getVALID_STRINGParserRuleCall() { return cVALID_STRINGParserRuleCall; }
	}
	public class GraphicRootClassesItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItems");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesItemsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cItemsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cItemsGraphicRootClassesItemsPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cItemsAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cItemsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cItemsGraphicRootClassesItemsPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cItemsAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass GraphicRootClassesItems
		//GraphicRootClassesItems:
		//	{GraphicRootClassesItems}
		//	//EReference is not a keyword
		//	'{' (items+=GraphicRootClassesItemsPropertiesAbstract ("," items+=GraphicRootClassesItemsPropertiesAbstract)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClassesItems} //EReference is not a keyword
		//'{' (items+=GraphicRootClassesItemsPropertiesAbstract ("," items+=GraphicRootClassesItemsPropertiesAbstract)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClassesItems}
		public Action getGraphicRootClassesItemsAction_0() { return cGraphicRootClassesItemsAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(items+=GraphicRootClassesItemsPropertiesAbstract ("," items+=GraphicRootClassesItemsPropertiesAbstract)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//items+=GraphicRootClassesItemsPropertiesAbstract
		public Assignment getItemsAssignment_2_0() { return cItemsAssignment_2_0; }
		
		//GraphicRootClassesItemsPropertiesAbstract
		public RuleCall getItemsGraphicRootClassesItemsPropertiesAbstractParserRuleCall_2_0_0() { return cItemsGraphicRootClassesItemsPropertiesAbstractParserRuleCall_2_0_0; }
		
		//("," items+=GraphicRootClassesItemsPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//items+=GraphicRootClassesItemsPropertiesAbstract
		public Assignment getItemsAssignment_2_1_1() { return cItemsAssignment_2_1_1; }
		
		//GraphicRootClassesItemsPropertiesAbstract
		public RuleCall getItemsGraphicRootClassesItemsPropertiesAbstractParserRuleCall_2_1_1_0() { return cItemsGraphicRootClassesItemsPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class GraphicRootClassesItemsNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesItemsNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		////EClass GraphicRootClassesItemsName
		//GraphicRootClassesItemsName:
		//	{GraphicRootClassesItemsName}
		//	//Keyword´s Name
		//	//Keywords
		//	'"name"' ':'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClassesItemsName} //Keyword´s Name
		////Keywords
		//'"name"' ':' name=EString
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClassesItemsName}
		public Action getGraphicRootClassesItemsNameAction_0() { return cGraphicRootClassesItemsNameAction_0; }
		
		////Keyword´s Name
		////Keywords
		//'"name"'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}
	public class GraphicRootClassesItemsVersionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsVersions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesItemsVersionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVersionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cVersionsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cVersionsGraphicRootClassesItemsVersionsPropertiesAbstractParserRuleCall_4_0_0 = (RuleCall)cVersionsAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cVersionsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVersionsGraphicRootClassesItemsVersionsPropertiesAbstractParserRuleCall_4_1_1_0 = (RuleCall)cVersionsAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass GraphicRootClassesItemsVersions
		//GraphicRootClassesItemsVersions:
		//	{GraphicRootClassesItemsVersions}
		//	//Keywords
		//	'"versions"' ':'
		//	'{' (versions+=GraphicRootClassesItemsVersionsPropertiesAbstract (","
		//	versions+=GraphicRootClassesItemsVersionsPropertiesAbstract)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClassesItemsVersions} //Keywords
		//'"versions"' ':' '{' (versions+=GraphicRootClassesItemsVersionsPropertiesAbstract (","
		//versions+=GraphicRootClassesItemsVersionsPropertiesAbstract)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClassesItemsVersions}
		public Action getGraphicRootClassesItemsVersionsAction_0() { return cGraphicRootClassesItemsVersionsAction_0; }
		
		////Keywords
		//'"versions"'
		public Keyword getVersionsKeyword_1() { return cVersionsKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(versions+=GraphicRootClassesItemsVersionsPropertiesAbstract (","
		//versions+=GraphicRootClassesItemsVersionsPropertiesAbstract)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//versions+=GraphicRootClassesItemsVersionsPropertiesAbstract
		public Assignment getVersionsAssignment_4_0() { return cVersionsAssignment_4_0; }
		
		//GraphicRootClassesItemsVersionsPropertiesAbstract
		public RuleCall getVersionsGraphicRootClassesItemsVersionsPropertiesAbstractParserRuleCall_4_0_0() { return cVersionsGraphicRootClassesItemsVersionsPropertiesAbstractParserRuleCall_4_0_0; }
		
		//("," versions+=GraphicRootClassesItemsVersionsPropertiesAbstract)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//versions+=GraphicRootClassesItemsVersionsPropertiesAbstract
		public Assignment getVersionsAssignment_4_1_1() { return cVersionsAssignment_4_1_1; }
		
		//GraphicRootClassesItemsVersionsPropertiesAbstract
		public RuleCall getVersionsGraphicRootClassesItemsVersionsPropertiesAbstractParserRuleCall_4_1_1_0() { return cVersionsGraphicRootClassesItemsVersionsPropertiesAbstractParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class GraphicRootClassesItemsVnameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsVname");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesItemsVnameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVnameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cVnameAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cVnameGraphicRootClassesItemsVnamePropertiesAbstractParserRuleCall_4_0_0 = (RuleCall)cVnameAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cVnameAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVnameGraphicRootClassesItemsVnamePropertiesAbstractParserRuleCall_4_1_1_0 = (RuleCall)cVnameAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass GraphicRootClassesItemsVname
		//GraphicRootClassesItemsVname:
		//	{GraphicRootClassesItemsVname}
		//	//Keywords
		//	'"vname"' ':'
		//	'{' (vname+=GraphicRootClassesItemsVnamePropertiesAbstract (","
		//	vname+=GraphicRootClassesItemsVnamePropertiesAbstract)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClassesItemsVname} //Keywords
		//'"vname"' ':' '{' (vname+=GraphicRootClassesItemsVnamePropertiesAbstract (","
		//vname+=GraphicRootClassesItemsVnamePropertiesAbstract)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClassesItemsVname}
		public Action getGraphicRootClassesItemsVnameAction_0() { return cGraphicRootClassesItemsVnameAction_0; }
		
		////Keywords
		//'"vname"'
		public Keyword getVnameKeyword_1() { return cVnameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(vname+=GraphicRootClassesItemsVnamePropertiesAbstract ("," vname+=GraphicRootClassesItemsVnamePropertiesAbstract)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//vname+=GraphicRootClassesItemsVnamePropertiesAbstract
		public Assignment getVnameAssignment_4_0() { return cVnameAssignment_4_0; }
		
		//GraphicRootClassesItemsVnamePropertiesAbstract
		public RuleCall getVnameGraphicRootClassesItemsVnamePropertiesAbstractParserRuleCall_4_0_0() { return cVnameGraphicRootClassesItemsVnamePropertiesAbstractParserRuleCall_4_0_0; }
		
		//("," vname+=GraphicRootClassesItemsVnamePropertiesAbstract)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//vname+=GraphicRootClassesItemsVnamePropertiesAbstract
		public Assignment getVnameAssignment_4_1_1() { return cVnameAssignment_4_1_1; }
		
		//GraphicRootClassesItemsVnamePropertiesAbstract
		public RuleCall getVnameGraphicRootClassesItemsVnamePropertiesAbstractParserRuleCall_4_1_1_0() { return cVnameGraphicRootClassesItemsVnamePropertiesAbstractParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class GraphicRootClassesItemsShowAttributesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsShowAttributes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesItemsShowAttributesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cShowAttributesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cShowAttributesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cShowAttributesGraphicRootClassesItemsShowAttributesItemsParserRuleCall_4_0_0 = (RuleCall)cShowAttributesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cShowAttributesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cShowAttributesGraphicRootClassesItemsShowAttributesItemsParserRuleCall_4_1_1_0 = (RuleCall)cShowAttributesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass GraphicRootClassesItemsShowAttributes
		//GraphicRootClassesItemsShowAttributes:
		//	{GraphicRootClassesItemsShowAttributes}
		//	//Keywords
		//	'"showAttributes"' ':'
		//	'[' (showAttributes+=GraphicRootClassesItemsShowAttributesItems (","
		//	showAttributes+=GraphicRootClassesItemsShowAttributesItems)*)? ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClassesItemsShowAttributes} //Keywords
		//'"showAttributes"' ':' '[' (showAttributes+=GraphicRootClassesItemsShowAttributesItems (","
		//showAttributes+=GraphicRootClassesItemsShowAttributesItems)*)? ']'
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClassesItemsShowAttributes}
		public Action getGraphicRootClassesItemsShowAttributesAction_0() { return cGraphicRootClassesItemsShowAttributesAction_0; }
		
		////Keywords
		//'"showAttributes"'
		public Keyword getShowAttributesKeyword_1() { return cShowAttributesKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(showAttributes+=GraphicRootClassesItemsShowAttributesItems (","
		//showAttributes+=GraphicRootClassesItemsShowAttributesItems)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//showAttributes+=GraphicRootClassesItemsShowAttributesItems
		public Assignment getShowAttributesAssignment_4_0() { return cShowAttributesAssignment_4_0; }
		
		//GraphicRootClassesItemsShowAttributesItems
		public RuleCall getShowAttributesGraphicRootClassesItemsShowAttributesItemsParserRuleCall_4_0_0() { return cShowAttributesGraphicRootClassesItemsShowAttributesItemsParserRuleCall_4_0_0; }
		
		//("," showAttributes+=GraphicRootClassesItemsShowAttributesItems)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//showAttributes+=GraphicRootClassesItemsShowAttributesItems
		public Assignment getShowAttributesAssignment_4_1_1() { return cShowAttributesAssignment_4_1_1; }
		
		//GraphicRootClassesItemsShowAttributesItems
		public RuleCall getShowAttributesGraphicRootClassesItemsShowAttributesItemsParserRuleCall_4_1_1_0() { return cShowAttributesGraphicRootClassesItemsShowAttributesItemsParserRuleCall_4_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class GraphicRootClassesItemsMaterialAttributesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsMaterialAttributes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesItemsMaterialAttributesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMaterialAttributesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cMaterialAttributesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cMaterialAttributesGraphicRootClassesItemsMaterialAttributesItemsParserRuleCall_4_0_0 = (RuleCall)cMaterialAttributesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cMaterialAttributesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cMaterialAttributesGraphicRootClassesItemsMaterialAttributesItemsParserRuleCall_4_1_1_0 = (RuleCall)cMaterialAttributesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass GraphicRootClassesItemsMaterialAttributes
		//GraphicRootClassesItemsMaterialAttributes:
		//	{GraphicRootClassesItemsMaterialAttributes}
		//	//Keywords
		//	'"materialAttributes"' ':'
		//	'[' (materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems (","
		//	materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems)*)? ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClassesItemsMaterialAttributes} //Keywords
		//'"materialAttributes"' ':' '[' (materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems (","
		//materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems)*)? ']'
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClassesItemsMaterialAttributes}
		public Action getGraphicRootClassesItemsMaterialAttributesAction_0() { return cGraphicRootClassesItemsMaterialAttributesAction_0; }
		
		////Keywords
		//'"materialAttributes"'
		public Keyword getMaterialAttributesKeyword_1() { return cMaterialAttributesKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems (","
		//materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems
		public Assignment getMaterialAttributesAssignment_4_0() { return cMaterialAttributesAssignment_4_0; }
		
		//GraphicRootClassesItemsMaterialAttributesItems
		public RuleCall getMaterialAttributesGraphicRootClassesItemsMaterialAttributesItemsParserRuleCall_4_0_0() { return cMaterialAttributesGraphicRootClassesItemsMaterialAttributesItemsParserRuleCall_4_0_0; }
		
		//("," materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems
		public Assignment getMaterialAttributesAssignment_4_1_1() { return cMaterialAttributesAssignment_4_1_1; }
		
		//GraphicRootClassesItemsMaterialAttributesItems
		public RuleCall getMaterialAttributesGraphicRootClassesItemsMaterialAttributesItemsParserRuleCall_4_1_1_0() { return cMaterialAttributesGraphicRootClassesItemsMaterialAttributesItemsParserRuleCall_4_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class GraphicRootClassesItemsConstraintsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraints");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesItemsConstraintsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConstraintsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cConstraintsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cConstraintsGraphicRootClassesItemsConstraintsPropertiesAbstractParserRuleCall_4_0_0 = (RuleCall)cConstraintsAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cConstraintsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cConstraintsGraphicRootClassesItemsConstraintsPropertiesAbstractParserRuleCall_4_1_1_0 = (RuleCall)cConstraintsAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass GraphicRootClassesItemsConstraints
		//GraphicRootClassesItemsConstraints:
		//	{GraphicRootClassesItemsConstraints}
		//	//Keywords
		//	'"constraints"' ':'
		//	'{' (constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract (","
		//	constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClassesItemsConstraints} //Keywords
		//'"constraints"' ':' '{' (constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract (","
		//constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClassesItemsConstraints}
		public Action getGraphicRootClassesItemsConstraintsAction_0() { return cGraphicRootClassesItemsConstraintsAction_0; }
		
		////Keywords
		//'"constraints"'
		public Keyword getConstraintsKeyword_1() { return cConstraintsKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract (","
		//constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract
		public Assignment getConstraintsAssignment_4_0() { return cConstraintsAssignment_4_0; }
		
		//GraphicRootClassesItemsConstraintsPropertiesAbstract
		public RuleCall getConstraintsGraphicRootClassesItemsConstraintsPropertiesAbstractParserRuleCall_4_0_0() { return cConstraintsGraphicRootClassesItemsConstraintsPropertiesAbstractParserRuleCall_4_0_0; }
		
		//("," constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract
		public Assignment getConstraintsAssignment_4_1_1() { return cConstraintsAssignment_4_1_1; }
		
		//GraphicRootClassesItemsConstraintsPropertiesAbstract
		public RuleCall getConstraintsGraphicRootClassesItemsConstraintsPropertiesAbstractParserRuleCall_4_1_1_0() { return cConstraintsGraphicRootClassesItemsConstraintsPropertiesAbstractParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class GraphicRootClassesItemsConnectionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnections");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesItemsConnectionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConnectionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cConnectionsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cConnectionsGraphicRootClassesItemsConnectionsItemsParserRuleCall_4_0_0 = (RuleCall)cConnectionsAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cConnectionsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cConnectionsGraphicRootClassesItemsConnectionsItemsParserRuleCall_4_1_1_0 = (RuleCall)cConnectionsAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass GraphicRootClassesItemsConnections
		//GraphicRootClassesItemsConnections:
		//	{GraphicRootClassesItemsConnections}
		//	//Keywords
		//	'"connections"' ':'
		//	'[' (connections+=GraphicRootClassesItemsConnectionsItems (","
		//	connections+=GraphicRootClassesItemsConnectionsItems)*)? ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClassesItemsConnections} //Keywords
		//'"connections"' ':' '[' (connections+=GraphicRootClassesItemsConnectionsItems (","
		//connections+=GraphicRootClassesItemsConnectionsItems)*)? ']'
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClassesItemsConnections}
		public Action getGraphicRootClassesItemsConnectionsAction_0() { return cGraphicRootClassesItemsConnectionsAction_0; }
		
		////Keywords
		//'"connections"'
		public Keyword getConnectionsKeyword_1() { return cConnectionsKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(connections+=GraphicRootClassesItemsConnectionsItems ("," connections+=GraphicRootClassesItemsConnectionsItems)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//connections+=GraphicRootClassesItemsConnectionsItems
		public Assignment getConnectionsAssignment_4_0() { return cConnectionsAssignment_4_0; }
		
		//GraphicRootClassesItemsConnectionsItems
		public RuleCall getConnectionsGraphicRootClassesItemsConnectionsItemsParserRuleCall_4_0_0() { return cConnectionsGraphicRootClassesItemsConnectionsItemsParserRuleCall_4_0_0; }
		
		//("," connections+=GraphicRootClassesItemsConnectionsItems)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//connections+=GraphicRootClassesItemsConnectionsItems
		public Assignment getConnectionsAssignment_4_1_1() { return cConnectionsAssignment_4_1_1; }
		
		//GraphicRootClassesItemsConnectionsItems
		public RuleCall getConnectionsGraphicRootClassesItemsConnectionsItemsParserRuleCall_4_1_1_0() { return cConnectionsGraphicRootClassesItemsConnectionsItemsParserRuleCall_4_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class GraphicRootClassesItemsVersionsV1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsVersionsV1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cV1Keyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cV1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cV1EStringParserRuleCall_2_0 = (RuleCall)cV1Assignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsVersionsV1
		//GraphicRootClassesItemsVersionsV1: //Keywords
		//	'"v1"' ':' v1=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"v1"' ':' v1=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"v1"'
		public Keyword getV1Keyword_0() { return cV1Keyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//v1=EString
		public Assignment getV1Assignment_2() { return cV1Assignment_2; }
		
		//EString
		public RuleCall getV1EStringParserRuleCall_2_0() { return cV1EStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsVersionsV2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsVersionsV2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cV2Keyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cV2Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cV2EStringParserRuleCall_2_0 = (RuleCall)cV2Assignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsVersionsV2
		//GraphicRootClassesItemsVersionsV2: //Keywords
		//	'"v2"' ':' v2=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"v2"' ':' v2=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"v2"'
		public Keyword getV2Keyword_0() { return cV2Keyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//v2=EString
		public Assignment getV2Assignment_2() { return cV2Assignment_2; }
		
		//EString
		public RuleCall getV2EStringParserRuleCall_2_0() { return cV2EStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsVersionsV3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsVersionsV3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cV3Keyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cV3Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cV3EStringParserRuleCall_2_0 = (RuleCall)cV3Assignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsVersionsV3
		//GraphicRootClassesItemsVersionsV3: //Keywords
		//	'"v3"' ':' v3=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"v3"' ':' v3=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"v3"'
		public Keyword getV3Keyword_0() { return cV3Keyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//v3=EString
		public Assignment getV3Assignment_2() { return cV3Assignment_2; }
		
		//EString
		public RuleCall getV3EStringParserRuleCall_2_0() { return cV3EStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsVnameV1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsVnameV1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cV1Keyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cV1Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cV1EStringParserRuleCall_2_0 = (RuleCall)cV1Assignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsVnameV1
		//GraphicRootClassesItemsVnameV1: //Keywords
		//	'"v1"' ':' v1=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"v1"' ':' v1=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"v1"'
		public Keyword getV1Keyword_0() { return cV1Keyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//v1=EString
		public Assignment getV1Assignment_2() { return cV1Assignment_2; }
		
		//EString
		public RuleCall getV1EStringParserRuleCall_2_0() { return cV1EStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsVnameV2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsVnameV2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cV2Keyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cV2Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cV2EStringParserRuleCall_2_0 = (RuleCall)cV2Assignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsVnameV2
		//GraphicRootClassesItemsVnameV2: //Keywords
		//	'"v2"' ':' v2=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"v2"' ':' v2=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"v2"'
		public Keyword getV2Keyword_0() { return cV2Keyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//v2=EString
		public Assignment getV2Assignment_2() { return cV2Assignment_2; }
		
		//EString
		public RuleCall getV2EStringParserRuleCall_2_0() { return cV2EStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsVnameV3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsVnameV3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cV3Keyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cV3Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cV3EStringParserRuleCall_2_0 = (RuleCall)cV3Assignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsVnameV3
		//GraphicRootClassesItemsVnameV3: //Keywords
		//	'"v3"' ':' v3=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"v3"' ':' v3=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"v3"'
		public Keyword getV3Keyword_0() { return cV3Keyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//v3=EString
		public Assignment getV3Assignment_2() { return cV3Assignment_2; }
		
		//EString
		public RuleCall getV3EStringParserRuleCall_2_0() { return cV3EStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsShowAttributesItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsShowAttributesItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsEStringParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass GraphicRootClassesItemsShowAttributesItems
		//GraphicRootClassesItemsShowAttributesItems:
		//	items=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//items=EString
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//EString
		public RuleCall getItemsEStringParserRuleCall_0() { return cItemsEStringParserRuleCall_0; }
	}
	public class GraphicRootClassesItemsMaterialAttributesItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsMaterialAttributesItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsEStringParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass GraphicRootClassesItemsMaterialAttributesItems
		//GraphicRootClassesItemsMaterialAttributesItems:
		//	items=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//items=EString
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//EString
		public RuleCall getItemsEStringParserRuleCall_0() { return cItemsEStringParserRuleCall_0; }
	}
	public class GraphicRootClassesItemsConstraintsPlanesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsPlanes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlanesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPlanesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPlanesEStringParserRuleCall_2_0 = (RuleCall)cPlanesAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsPlanes
		//GraphicRootClassesItemsConstraintsPlanes: //Keywords
		//	'"planes"' ':' planes=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"planes"' ':' planes=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"planes"'
		public Keyword getPlanesKeyword_0() { return cPlanesKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//planes=EString
		public Assignment getPlanesAssignment_2() { return cPlanesAssignment_2; }
		
		//EString
		public RuleCall getPlanesEStringParserRuleCall_2_0() { return cPlanesEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsIluminationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsIlumination");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIluminationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIluminationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIluminationEStringParserRuleCall_2_0 = (RuleCall)cIluminationAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsIlumination
		//GraphicRootClassesItemsConstraintsIlumination: //Keywords
		//	'"ilumination"' ':' ilumination=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"ilumination"' ':' ilumination=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"ilumination"'
		public Keyword getIluminationKeyword_0() { return cIluminationKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//ilumination=EString
		public Assignment getIluminationAssignment_2() { return cIluminationAssignment_2; }
		
		//EString
		public RuleCall getIluminationEStringParserRuleCall_2_0() { return cIluminationEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsSizeMaxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsSizeMax");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSizeMaxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSizeMaxAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSizeMaxEStringParserRuleCall_2_0 = (RuleCall)cSizeMaxAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsSizeMax
		//GraphicRootClassesItemsConstraintsSizeMax: //Keywords
		//	'"sizeMax"' ':' sizeMax=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"sizeMax"' ':' sizeMax=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"sizeMax"'
		public Keyword getSizeMaxKeyword_0() { return cSizeMaxKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//sizeMax=EString
		public Assignment getSizeMaxAssignment_2() { return cSizeMaxAssignment_2; }
		
		//EString
		public RuleCall getSizeMaxEStringParserRuleCall_2_0() { return cSizeMaxEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsSizeMinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsSizeMin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSizeMinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSizeMinAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSizeMinEStringParserRuleCall_2_0 = (RuleCall)cSizeMinAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsSizeMin
		//GraphicRootClassesItemsConstraintsSizeMin: //Keywords
		//	'"sizeMin"' ':' sizeMin=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"sizeMin"' ':' sizeMin=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"sizeMin"'
		public Keyword getSizeMinKeyword_0() { return cSizeMinKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//sizeMin=EString
		public Assignment getSizeMinAssignment_2() { return cSizeMinAssignment_2; }
		
		//EString
		public RuleCall getSizeMinEStringParserRuleCall_2_0() { return cSizeMinEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsSizeInitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsSizeInit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSizeInitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSizeInitAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSizeInitEStringParserRuleCall_2_0 = (RuleCall)cSizeInitAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsSizeInit
		//GraphicRootClassesItemsConstraintsSizeInit: //Keywords
		//	'"sizeInit"' ':' sizeInit=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"sizeInit"' ':' sizeInit=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"sizeInit"'
		public Keyword getSizeInitKeyword_0() { return cSizeInitKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//sizeInit=EString
		public Assignment getSizeInitAssignment_2() { return cSizeInitAssignment_2; }
		
		//EString
		public RuleCall getSizeInitEStringParserRuleCall_2_0() { return cSizeInitEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsOverlappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsOverlapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOverlappingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOverlappingAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOverlappingEStringParserRuleCall_2_0 = (RuleCall)cOverlappingAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsOverlapping
		//GraphicRootClassesItemsConstraintsOverlapping: //Keywords
		//	'"overlapping"' ':' overlapping=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"overlapping"' ':' overlapping=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"overlapping"'
		public Keyword getOverlappingKeyword_0() { return cOverlappingKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//overlapping=EString
		public Assignment getOverlappingAssignment_2() { return cOverlappingAssignment_2; }
		
		//EString
		public RuleCall getOverlappingEStringParserRuleCall_2_0() { return cOverlappingEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsXToOriginPosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsXToOriginPos");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cXToOriginPosKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXToOriginPosAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXToOriginPosEStringParserRuleCall_2_0 = (RuleCall)cXToOriginPosAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsXToOriginPos
		//GraphicRootClassesItemsConstraintsXToOriginPos: //Keywords
		//	'"xToOriginPos"' ':' xToOriginPos=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"xToOriginPos"' ':' xToOriginPos=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"xToOriginPos"'
		public Keyword getXToOriginPosKeyword_0() { return cXToOriginPosKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//xToOriginPos=EString
		public Assignment getXToOriginPosAssignment_2() { return cXToOriginPosAssignment_2; }
		
		//EString
		public RuleCall getXToOriginPosEStringParserRuleCall_2_0() { return cXToOriginPosEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsYToOriginPosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsYToOriginPos");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cYToOriginPosKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cYToOriginPosAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cYToOriginPosEStringParserRuleCall_2_0 = (RuleCall)cYToOriginPosAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsYToOriginPos
		//GraphicRootClassesItemsConstraintsYToOriginPos: //Keywords
		//	'"yToOriginPos"' ':' yToOriginPos=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"yToOriginPos"' ':' yToOriginPos=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"yToOriginPos"'
		public Keyword getYToOriginPosKeyword_0() { return cYToOriginPosKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//yToOriginPos=EString
		public Assignment getYToOriginPosAssignment_2() { return cYToOriginPosAssignment_2; }
		
		//EString
		public RuleCall getYToOriginPosEStringParserRuleCall_2_0() { return cYToOriginPosEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsZToOriginPosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsZToOriginPos");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cZToOriginPosKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cZToOriginPosAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cZToOriginPosEStringParserRuleCall_2_0 = (RuleCall)cZToOriginPosAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsZToOriginPos
		//GraphicRootClassesItemsConstraintsZToOriginPos: //Keywords
		//	'"zToOriginPos"' ':' zToOriginPos=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"zToOriginPos"' ':' zToOriginPos=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"zToOriginPos"'
		public Keyword getZToOriginPosKeyword_0() { return cZToOriginPosKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//zToOriginPos=EString
		public Assignment getZToOriginPosAssignment_2() { return cZToOriginPosAssignment_2; }
		
		//EString
		public RuleCall getZToOriginPosEStringParserRuleCall_2_0() { return cZToOriginPosEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsRotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsRotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRotationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRotationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRotationEStringParserRuleCall_2_0 = (RuleCall)cRotationAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsRotation
		//GraphicRootClassesItemsConstraintsRotation: //Keywords
		//	'"rotation"' ':' rotation=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"rotation"' ':' rotation=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"rotation"'
		public Keyword getRotationKeyword_0() { return cRotationKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//rotation=EString
		public Assignment getRotationAssignment_2() { return cRotationAssignment_2; }
		
		//EString
		public RuleCall getRotationEStringParserRuleCall_2_0() { return cRotationEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsTextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsText");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextEStringParserRuleCall_2_0 = (RuleCall)cTextAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsText
		//GraphicRootClassesItemsConstraintsText: //Keywords
		//	'"text"' ':' text=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"text"' ':' text=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"text"'
		public Keyword getTextKeyword_0() { return cTextKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//text=EString
		public Assignment getTextAssignment_2() { return cTextAssignment_2; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_2_0() { return cTextEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsTrimElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsTrim");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTrimKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTrimAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTrimEBooleanObjectParserRuleCall_2_0 = (RuleCall)cTrimAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsTrim
		//GraphicRootClassesItemsConstraintsTrim: //Keywords
		//	'"trim"' ':' trim=EBooleanObject;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"trim"' ':' trim=EBooleanObject
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"trim"'
		public Keyword getTrimKeyword_0() { return cTrimKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//trim=EBooleanObject
		public Assignment getTrimAssignment_2() { return cTrimAssignment_2; }
		
		//EBooleanObject
		public RuleCall getTrimEBooleanObjectParserRuleCall_2_0() { return cTrimEBooleanObjectParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsCategoryBitMaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsCategoryBitMask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCategoryBitMaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCategoryBitMaskAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCategoryBitMaskEDoubleObjectParserRuleCall_2_0 = (RuleCall)cCategoryBitMaskAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsCategoryBitMask
		//GraphicRootClassesItemsConstraintsCategoryBitMask: //Keywords
		//	'"categoryBitMask"' ':' categoryBitMask=EDoubleObject;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"categoryBitMask"' ':' categoryBitMask=EDoubleObject
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"categoryBitMask"'
		public Keyword getCategoryBitMaskKeyword_0() { return cCategoryBitMaskKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//categoryBitMask=EDoubleObject
		public Assignment getCategoryBitMaskAssignment_2() { return cCategoryBitMaskAssignment_2; }
		
		//EDoubleObject
		public RuleCall getCategoryBitMaskEDoubleObjectParserRuleCall_2_0() { return cCategoryBitMaskEDoubleObjectParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsCollisionBitMaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsCollisionBitMask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCollisionBitMaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCollisionBitMaskAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCollisionBitMaskEDoubleObjectParserRuleCall_2_0 = (RuleCall)cCollisionBitMaskAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsCollisionBitMask
		//GraphicRootClassesItemsConstraintsCollisionBitMask: //Keywords
		//	'"collisionBitMask"' ':' collisionBitMask=EDoubleObject;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"collisionBitMask"' ':' collisionBitMask=EDoubleObject
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"collisionBitMask"'
		public Keyword getCollisionBitMaskKeyword_0() { return cCollisionBitMaskKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//collisionBitMask=EDoubleObject
		public Assignment getCollisionBitMaskAssignment_2() { return cCollisionBitMaskAssignment_2; }
		
		//EDoubleObject
		public RuleCall getCollisionBitMaskEDoubleObjectParserRuleCall_2_0() { return cCollisionBitMaskEDoubleObjectParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConstraintsContactTestBitMaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConstraintsContactTestBitMask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContactTestBitMaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cContactTestBitMaskAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cContactTestBitMaskEDoubleObjectParserRuleCall_2_0 = (RuleCall)cContactTestBitMaskAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConstraintsContactTestBitMask
		//GraphicRootClassesItemsConstraintsContactTestBitMask: //Keywords
		//	'"contactTestBitMask"' ':' contactTestBitMask=EDoubleObject;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"contactTestBitMask"' ':' contactTestBitMask=EDoubleObject
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"contactTestBitMask"'
		public Keyword getContactTestBitMaskKeyword_0() { return cContactTestBitMaskKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//contactTestBitMask=EDoubleObject
		public Assignment getContactTestBitMaskAssignment_2() { return cContactTestBitMaskAssignment_2; }
		
		//EDoubleObject
		public RuleCall getContactTestBitMaskEDoubleObjectParserRuleCall_2_0() { return cContactTestBitMaskEDoubleObjectParserRuleCall_2_0; }
	}
	public class EBooleanObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.EBooleanObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBooleanObject ecore::EBooleanObject:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class EDoubleObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.EDoubleObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cE_INTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cE_DOUBLETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EDoubleObject ecore::EDoubleObject:
		//	E_INT | E_DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//E_INT | E_DOUBLE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//E_INT
		public RuleCall getE_INTTerminalRuleCall_0() { return cE_INTTerminalRuleCall_0; }
		
		//E_DOUBLE
		public RuleCall getE_DOUBLETerminalRuleCall_1() { return cE_DOUBLETerminalRuleCall_1; }
	}
	public class GraphicRootClassesItemsConnectionsItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItems");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesItemsConnectionsItemsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cItemsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cItemsGraphicRootClassesItemsConnectionsItemsPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cItemsAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cItemsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cItemsGraphicRootClassesItemsConnectionsItemsPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cItemsAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass GraphicRootClassesItemsConnectionsItems
		//GraphicRootClassesItemsConnectionsItems:
		//	{GraphicRootClassesItemsConnectionsItems}
		//	//EReference is not a keyword
		//	'{' (items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract (","
		//	items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClassesItemsConnectionsItems} //EReference is not a keyword
		//'{' (items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract (","
		//items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClassesItemsConnectionsItems}
		public Action getGraphicRootClassesItemsConnectionsItemsAction_0() { return cGraphicRootClassesItemsConnectionsItemsAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract (","
		//items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract
		public Assignment getItemsAssignment_2_0() { return cItemsAssignment_2_0; }
		
		//GraphicRootClassesItemsConnectionsItemsPropertiesAbstract
		public RuleCall getItemsGraphicRootClassesItemsConnectionsItemsPropertiesAbstractParserRuleCall_2_0_0() { return cItemsGraphicRootClassesItemsConnectionsItemsPropertiesAbstractParserRuleCall_2_0_0; }
		
		//("," items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract
		public Assignment getItemsAssignment_2_1_1() { return cItemsAssignment_2_1_1; }
		
		//GraphicRootClassesItemsConnectionsItemsPropertiesAbstract
		public RuleCall getItemsGraphicRootClassesItemsConnectionsItemsPropertiesAbstractParserRuleCall_2_1_1_0() { return cItemsGraphicRootClassesItemsConnectionsItemsPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class GraphicRootClassesItemsConnectionsItemsNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGraphicRootClassesItemsConnectionsItemsNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsName
		//GraphicRootClassesItemsConnectionsItemsName:
		//	{GraphicRootClassesItemsConnectionsItemsName}
		//	//Keyword´s Name
		//	//Keywords
		//	'"name"' ':'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{GraphicRootClassesItemsConnectionsItemsName} //Keyword´s Name
		////Keywords
		//'"name"' ':' name=EString
		public Group getGroup() { return cGroup; }
		
		//{GraphicRootClassesItemsConnectionsItemsName}
		public Action getGraphicRootClassesItemsConnectionsItemsNameAction_0() { return cGraphicRootClassesItemsConnectionsItemsNameAction_0; }
		
		////Keyword´s Name
		////Keywords
		//'"name"'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeEStringParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsType
		//GraphicRootClassesItemsConnectionsItemsType: //Keywords
		//	'"type"' ':' type=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"type"' ':' type=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"type"'
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=EString
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_2_0() { return cTypeEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsColor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cColorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cColorEStringParserRuleCall_2_0 = (RuleCall)cColorAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsColor
		//GraphicRootClassesItemsConnectionsItemsColor: //Keywords
		//	'"color"' ':' color=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"color"' ':' color=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"color"'
		public Keyword getColorKeyword_0() { return cColorKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//color=EString
		public Assignment getColorAssignment_2() { return cColorAssignment_2; }
		
		//EString
		public RuleCall getColorEStringParserRuleCall_2_0() { return cColorEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsTextColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsTextColor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextColorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTextColorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextColorEStringParserRuleCall_2_0 = (RuleCall)cTextColorAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsTextColor
		//GraphicRootClassesItemsConnectionsItemsTextColor: //Keywords
		//	'"textColor"' ':' textColor=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"textColor"' ':' textColor=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"textColor"'
		public Keyword getTextColorKeyword_0() { return cTextColorKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//textColor=EString
		public Assignment getTextColorAssignment_2() { return cTextColorAssignment_2; }
		
		//EString
		public RuleCall getTextColorEStringParserRuleCall_2_0() { return cTextColorEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsDecoratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsDecorator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDecoratorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDecoratorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDecoratorEStringParserRuleCall_2_0 = (RuleCall)cDecoratorAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsDecorator
		//GraphicRootClassesItemsConnectionsItemsDecorator: //Keywords
		//	'"decorator"' ':' decorator=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"decorator"' ':' decorator=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"decorator"'
		public Keyword getDecoratorKeyword_0() { return cDecoratorKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//decorator=EString
		public Assignment getDecoratorAssignment_2() { return cDecoratorAssignment_2; }
		
		//EString
		public RuleCall getDecoratorEStringParserRuleCall_2_0() { return cDecoratorEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsDecoratorColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsDecoratorColor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDecoratorColorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDecoratorColorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDecoratorColorEStringParserRuleCall_2_0 = (RuleCall)cDecoratorColorAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsDecoratorColor
		//GraphicRootClassesItemsConnectionsItemsDecoratorColor: //Keywords
		//	'"decoratorColor"' ':' decoratorColor=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"decoratorColor"' ':' decoratorColor=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"decoratorColor"'
		public Keyword getDecoratorColorKeyword_0() { return cDecoratorColorKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//decoratorColor=EString
		public Assignment getDecoratorColorAssignment_2() { return cDecoratorColorAssignment_2; }
		
		//EString
		public RuleCall getDecoratorColorEStringParserRuleCall_2_0() { return cDecoratorColorEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsDecoratorWidthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsDecoratorWidth");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDecoratorWidthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDecoratorWidthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDecoratorWidthEStringParserRuleCall_2_0 = (RuleCall)cDecoratorWidthAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsDecoratorWidth
		//GraphicRootClassesItemsConnectionsItemsDecoratorWidth: //Keywords
		//	'"decoratorWidth"' ':' decoratorWidth=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"decoratorWidth"' ':' decoratorWidth=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"decoratorWidth"'
		public Keyword getDecoratorWidthKeyword_0() { return cDecoratorWidthKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//decoratorWidth=EString
		public Assignment getDecoratorWidthAssignment_2() { return cDecoratorWidthAssignment_2; }
		
		//EString
		public RuleCall getDecoratorWidthEStringParserRuleCall_2_0() { return cDecoratorWidthEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsDecoratorPosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsDecoratorPos");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDecoratorPosKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDecoratorPosAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDecoratorPosEStringParserRuleCall_2_0 = (RuleCall)cDecoratorPosAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsDecoratorPos
		//GraphicRootClassesItemsConnectionsItemsDecoratorPos: //Keywords
		//	'"decoratorPos"' ':' decoratorPos=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"decoratorPos"' ':' decoratorPos=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"decoratorPos"'
		public Keyword getDecoratorPosKeyword_0() { return cDecoratorPosKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//decoratorPos=EString
		public Assignment getDecoratorPosAssignment_2() { return cDecoratorPosAssignment_2; }
		
		//EString
		public RuleCall getDecoratorPosEStringParserRuleCall_2_0() { return cDecoratorPosEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsPatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsPattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPatternKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPatternAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPatternEStringParserRuleCall_2_0 = (RuleCall)cPatternAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsPattern
		//GraphicRootClassesItemsConnectionsItemsPattern: //Keywords
		//	'"pattern"' ':' pattern=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"pattern"' ':' pattern=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"pattern"'
		public Keyword getPatternKeyword_0() { return cPatternKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//pattern=EString
		public Assignment getPatternAssignment_2() { return cPatternAssignment_2; }
		
		//EString
		public RuleCall getPatternEStringParserRuleCall_2_0() { return cPatternEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsWidthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsWidth");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWidthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cWidthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cWidthEStringParserRuleCall_2_0 = (RuleCall)cWidthAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsWidth
		//GraphicRootClassesItemsConnectionsItemsWidth: //Keywords
		//	'"width"' ':' width=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"width"' ':' width=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"width"'
		public Keyword getWidthKeyword_0() { return cWidthKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//width=EString
		public Assignment getWidthAssignment_2() { return cWidthAssignment_2; }
		
		//EString
		public RuleCall getWidthEStringParserRuleCall_2_0() { return cWidthEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsPositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsPosition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPositionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPositionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPositionEStringParserRuleCall_2_0 = (RuleCall)cPositionAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsPosition
		//GraphicRootClassesItemsConnectionsItemsPosition: //Keywords
		//	'"position"' ':' position=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"position"' ':' position=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"position"'
		public Keyword getPositionKeyword_0() { return cPositionKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//position=EString
		public Assignment getPositionAssignment_2() { return cPositionAssignment_2; }
		
		//EString
		public RuleCall getPositionEStringParserRuleCall_2_0() { return cPositionEStringParserRuleCall_2_0; }
	}
	public class GraphicRootClassesItemsConnectionsItemsTargetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.GraphicRootClassesItemsConnectionsItemsTarget");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTargetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTargetEStringParserRuleCall_2_0 = (RuleCall)cTargetAssignment_2.eContents().get(0);
		
		////EClass GraphicRootClassesItemsConnectionsItemsTarget
		//GraphicRootClassesItemsConnectionsItemsTarget: //Keywords
		//	'"target"' ':' target=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"target"' ':' target=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"target"'
		public Keyword getTargetKeyword_0() { return cTargetKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//target=EString
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//EString
		public RuleCall getTargetEStringParserRuleCall_2_0() { return cTargetEStringParserRuleCall_2_0; }
	}
	public class VALID_STRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.VALID_STRING");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKEYWORDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//VALID_STRING:
		//	STRING | KEYWORD;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | KEYWORD
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//KEYWORD
		public RuleCall getKEYWORDParserRuleCall_1() { return cKEYWORDParserRuleCall_1; }
	}
	public class KEYWORDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.KEYWORD");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cDecoratorKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cXToOriginPosKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cColorKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cShowAttributesKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cClassesKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cSizeInitKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cPatternKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cTypeKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cURIKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cConstraintsKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cCategoryBitMaskKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cTrimKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cTextKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cSizeMaxKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cConnectionsKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cCollisionBitMaskKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cContactTestBitMaskKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cZToOriginPosKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cRotationKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		private final Keyword cPlanesKeyword_19 = (Keyword)cAlternatives.eContents().get(19);
		private final Keyword cTextColorKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		private final Keyword cSizeMinKeyword_21 = (Keyword)cAlternatives.eContents().get(21);
		private final Keyword cDecoratorPosKeyword_22 = (Keyword)cAlternatives.eContents().get(22);
		private final Keyword cTargetKeyword_23 = (Keyword)cAlternatives.eContents().get(23);
		private final Keyword cYToOriginPosKeyword_24 = (Keyword)cAlternatives.eContents().get(24);
		private final Keyword cMaterialAttributesKeyword_25 = (Keyword)cAlternatives.eContents().get(25);
		private final Keyword cVnameKeyword_26 = (Keyword)cAlternatives.eContents().get(26);
		private final Keyword cDecoratorColorKeyword_27 = (Keyword)cAlternatives.eContents().get(27);
		private final Keyword cVersionsKeyword_28 = (Keyword)cAlternatives.eContents().get(28);
		private final Keyword cIluminationKeyword_29 = (Keyword)cAlternatives.eContents().get(29);
		private final Keyword cOverlappingKeyword_30 = (Keyword)cAlternatives.eContents().get(30);
		private final Keyword cNameKeyword_31 = (Keyword)cAlternatives.eContents().get(31);
		private final Keyword cWidthKeyword_32 = (Keyword)cAlternatives.eContents().get(32);
		private final Keyword cDecoratorWidthKeyword_33 = (Keyword)cAlternatives.eContents().get(33);
		private final Keyword cV1Keyword_34 = (Keyword)cAlternatives.eContents().get(34);
		private final Keyword cPositionKeyword_35 = (Keyword)cAlternatives.eContents().get(35);
		private final Keyword cV2Keyword_36 = (Keyword)cAlternatives.eContents().get(36);
		private final Keyword cV3Keyword_37 = (Keyword)cAlternatives.eContents().get(37);
		
		//KEYWORD:
		//	'"decorator"' |
		//	'"xToOriginPos"' |
		//	'"color"' |
		//	'"showAttributes"' |
		//	'"classes"' |
		//	'"sizeInit"' |
		//	'"pattern"' |
		//	'"type"' |
		//	'"URI"' |
		//	'"constraints"' |
		//	'"categoryBitMask"' |
		//	'"trim"' |
		//	'"text"' |
		//	'"sizeMax"' |
		//	'"connections"' |
		//	'"collisionBitMask"' |
		//	'"contactTestBitMask"' |
		//	'"zToOriginPos"' |
		//	'"rotation"' |
		//	'"planes"' |
		//	'"textColor"' |
		//	'"sizeMin"' |
		//	'"decoratorPos"' |
		//	'"target"' |
		//	'"yToOriginPos"' |
		//	'"materialAttributes"' |
		//	'"vname"' |
		//	'"decoratorColor"' |
		//	'"versions"' |
		//	'"ilumination"' |
		//	'"overlapping"' |
		//	'"name"' |
		//	'"width"' |
		//	'"decoratorWidth"' |
		//	'"v1"' |
		//	'"position"' |
		//	'"v2"' |
		//	'"v3"';
		@Override public ParserRule getRule() { return rule; }
		
		//'"decorator"' | '"xToOriginPos"' | '"color"' | '"showAttributes"' | '"classes"' | '"sizeInit"' | '"pattern"' | '"type"'
		//| '"URI"' | '"constraints"' | '"categoryBitMask"' | '"trim"' | '"text"' | '"sizeMax"' | '"connections"' |
		//'"collisionBitMask"' | '"contactTestBitMask"' | '"zToOriginPos"' | '"rotation"' | '"planes"' | '"textColor"' |
		//'"sizeMin"' | '"decoratorPos"' | '"target"' | '"yToOriginPos"' | '"materialAttributes"' | '"vname"' |
		//'"decoratorColor"' | '"versions"' | '"ilumination"' | '"overlapping"' | '"name"' | '"width"' | '"decoratorWidth"' |
		//'"v1"' | '"position"' | '"v2"' | '"v3"'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'"decorator"'
		public Keyword getDecoratorKeyword_0() { return cDecoratorKeyword_0; }
		
		//'"xToOriginPos"'
		public Keyword getXToOriginPosKeyword_1() { return cXToOriginPosKeyword_1; }
		
		//'"color"'
		public Keyword getColorKeyword_2() { return cColorKeyword_2; }
		
		//'"showAttributes"'
		public Keyword getShowAttributesKeyword_3() { return cShowAttributesKeyword_3; }
		
		//'"classes"'
		public Keyword getClassesKeyword_4() { return cClassesKeyword_4; }
		
		//'"sizeInit"'
		public Keyword getSizeInitKeyword_5() { return cSizeInitKeyword_5; }
		
		//'"pattern"'
		public Keyword getPatternKeyword_6() { return cPatternKeyword_6; }
		
		//'"type"'
		public Keyword getTypeKeyword_7() { return cTypeKeyword_7; }
		
		//'"URI"'
		public Keyword getURIKeyword_8() { return cURIKeyword_8; }
		
		//'"constraints"'
		public Keyword getConstraintsKeyword_9() { return cConstraintsKeyword_9; }
		
		//'"categoryBitMask"'
		public Keyword getCategoryBitMaskKeyword_10() { return cCategoryBitMaskKeyword_10; }
		
		//'"trim"'
		public Keyword getTrimKeyword_11() { return cTrimKeyword_11; }
		
		//'"text"'
		public Keyword getTextKeyword_12() { return cTextKeyword_12; }
		
		//'"sizeMax"'
		public Keyword getSizeMaxKeyword_13() { return cSizeMaxKeyword_13; }
		
		//'"connections"'
		public Keyword getConnectionsKeyword_14() { return cConnectionsKeyword_14; }
		
		//'"collisionBitMask"'
		public Keyword getCollisionBitMaskKeyword_15() { return cCollisionBitMaskKeyword_15; }
		
		//'"contactTestBitMask"'
		public Keyword getContactTestBitMaskKeyword_16() { return cContactTestBitMaskKeyword_16; }
		
		//'"zToOriginPos"'
		public Keyword getZToOriginPosKeyword_17() { return cZToOriginPosKeyword_17; }
		
		//'"rotation"'
		public Keyword getRotationKeyword_18() { return cRotationKeyword_18; }
		
		//'"planes"'
		public Keyword getPlanesKeyword_19() { return cPlanesKeyword_19; }
		
		//'"textColor"'
		public Keyword getTextColorKeyword_20() { return cTextColorKeyword_20; }
		
		//'"sizeMin"'
		public Keyword getSizeMinKeyword_21() { return cSizeMinKeyword_21; }
		
		//'"decoratorPos"'
		public Keyword getDecoratorPosKeyword_22() { return cDecoratorPosKeyword_22; }
		
		//'"target"'
		public Keyword getTargetKeyword_23() { return cTargetKeyword_23; }
		
		//'"yToOriginPos"'
		public Keyword getYToOriginPosKeyword_24() { return cYToOriginPosKeyword_24; }
		
		//'"materialAttributes"'
		public Keyword getMaterialAttributesKeyword_25() { return cMaterialAttributesKeyword_25; }
		
		//'"vname"'
		public Keyword getVnameKeyword_26() { return cVnameKeyword_26; }
		
		//'"decoratorColor"'
		public Keyword getDecoratorColorKeyword_27() { return cDecoratorColorKeyword_27; }
		
		//'"versions"'
		public Keyword getVersionsKeyword_28() { return cVersionsKeyword_28; }
		
		//'"ilumination"'
		public Keyword getIluminationKeyword_29() { return cIluminationKeyword_29; }
		
		//'"overlapping"'
		public Keyword getOverlappingKeyword_30() { return cOverlappingKeyword_30; }
		
		//'"name"'
		public Keyword getNameKeyword_31() { return cNameKeyword_31; }
		
		//'"width"'
		public Keyword getWidthKeyword_32() { return cWidthKeyword_32; }
		
		//'"decoratorWidth"'
		public Keyword getDecoratorWidthKeyword_33() { return cDecoratorWidthKeyword_33; }
		
		//'"v1"'
		public Keyword getV1Keyword_34() { return cV1Keyword_34; }
		
		//'"position"'
		public Keyword getPositionKeyword_35() { return cPositionKeyword_35; }
		
		//'"v2"'
		public Keyword getV2Keyword_36() { return cV2Keyword_36; }
		
		//'"v3"'
		public Keyword getV3Keyword_37() { return cV3Keyword_37; }
	}
	
	
	private final GraphicRootElements pGraphicRoot;
	private final GraphicRootPropertiesAbstractElements pGraphicRootPropertiesAbstract;
	private final GraphicRootClassesItemsPropertiesAbstractElements pGraphicRootClassesItemsPropertiesAbstract;
	private final GraphicRootClassesItemsVersionsPropertiesAbstractElements pGraphicRootClassesItemsVersionsPropertiesAbstract;
	private final GraphicRootClassesItemsVnamePropertiesAbstractElements pGraphicRootClassesItemsVnamePropertiesAbstract;
	private final GraphicRootClassesItemsConstraintsPropertiesAbstractElements pGraphicRootClassesItemsConstraintsPropertiesAbstract;
	private final GraphicRootClassesItemsConnectionsItemsPropertiesAbstractElements pGraphicRootClassesItemsConnectionsItemsPropertiesAbstract;
	private final GraphicRootNameElements pGraphicRootName;
	private final GraphicRootURIElements pGraphicRootURI;
	private final GraphicRootClassesElements pGraphicRootClasses;
	private final EStringElements pEString;
	private final GraphicRootClassesItemsElements pGraphicRootClassesItems;
	private final GraphicRootClassesItemsNameElements pGraphicRootClassesItemsName;
	private final GraphicRootClassesItemsVersionsElements pGraphicRootClassesItemsVersions;
	private final GraphicRootClassesItemsVnameElements pGraphicRootClassesItemsVname;
	private final GraphicRootClassesItemsShowAttributesElements pGraphicRootClassesItemsShowAttributes;
	private final GraphicRootClassesItemsMaterialAttributesElements pGraphicRootClassesItemsMaterialAttributes;
	private final GraphicRootClassesItemsConstraintsElements pGraphicRootClassesItemsConstraints;
	private final GraphicRootClassesItemsConnectionsElements pGraphicRootClassesItemsConnections;
	private final GraphicRootClassesItemsVersionsV1Elements pGraphicRootClassesItemsVersionsV1;
	private final GraphicRootClassesItemsVersionsV2Elements pGraphicRootClassesItemsVersionsV2;
	private final GraphicRootClassesItemsVersionsV3Elements pGraphicRootClassesItemsVersionsV3;
	private final GraphicRootClassesItemsVnameV1Elements pGraphicRootClassesItemsVnameV1;
	private final GraphicRootClassesItemsVnameV2Elements pGraphicRootClassesItemsVnameV2;
	private final GraphicRootClassesItemsVnameV3Elements pGraphicRootClassesItemsVnameV3;
	private final GraphicRootClassesItemsShowAttributesItemsElements pGraphicRootClassesItemsShowAttributesItems;
	private final GraphicRootClassesItemsMaterialAttributesItemsElements pGraphicRootClassesItemsMaterialAttributesItems;
	private final GraphicRootClassesItemsConstraintsPlanesElements pGraphicRootClassesItemsConstraintsPlanes;
	private final GraphicRootClassesItemsConstraintsIluminationElements pGraphicRootClassesItemsConstraintsIlumination;
	private final GraphicRootClassesItemsConstraintsSizeMaxElements pGraphicRootClassesItemsConstraintsSizeMax;
	private final GraphicRootClassesItemsConstraintsSizeMinElements pGraphicRootClassesItemsConstraintsSizeMin;
	private final GraphicRootClassesItemsConstraintsSizeInitElements pGraphicRootClassesItemsConstraintsSizeInit;
	private final GraphicRootClassesItemsConstraintsOverlappingElements pGraphicRootClassesItemsConstraintsOverlapping;
	private final GraphicRootClassesItemsConstraintsXToOriginPosElements pGraphicRootClassesItemsConstraintsXToOriginPos;
	private final GraphicRootClassesItemsConstraintsYToOriginPosElements pGraphicRootClassesItemsConstraintsYToOriginPos;
	private final GraphicRootClassesItemsConstraintsZToOriginPosElements pGraphicRootClassesItemsConstraintsZToOriginPos;
	private final GraphicRootClassesItemsConstraintsRotationElements pGraphicRootClassesItemsConstraintsRotation;
	private final GraphicRootClassesItemsConstraintsTextElements pGraphicRootClassesItemsConstraintsText;
	private final GraphicRootClassesItemsConstraintsTrimElements pGraphicRootClassesItemsConstraintsTrim;
	private final GraphicRootClassesItemsConstraintsCategoryBitMaskElements pGraphicRootClassesItemsConstraintsCategoryBitMask;
	private final GraphicRootClassesItemsConstraintsCollisionBitMaskElements pGraphicRootClassesItemsConstraintsCollisionBitMask;
	private final GraphicRootClassesItemsConstraintsContactTestBitMaskElements pGraphicRootClassesItemsConstraintsContactTestBitMask;
	private final EBooleanObjectElements pEBooleanObject;
	private final EDoubleObjectElements pEDoubleObject;
	private final GraphicRootClassesItemsConnectionsItemsElements pGraphicRootClassesItemsConnectionsItems;
	private final GraphicRootClassesItemsConnectionsItemsNameElements pGraphicRootClassesItemsConnectionsItemsName;
	private final GraphicRootClassesItemsConnectionsItemsTypeElements pGraphicRootClassesItemsConnectionsItemsType;
	private final GraphicRootClassesItemsConnectionsItemsColorElements pGraphicRootClassesItemsConnectionsItemsColor;
	private final GraphicRootClassesItemsConnectionsItemsTextColorElements pGraphicRootClassesItemsConnectionsItemsTextColor;
	private final GraphicRootClassesItemsConnectionsItemsDecoratorElements pGraphicRootClassesItemsConnectionsItemsDecorator;
	private final GraphicRootClassesItemsConnectionsItemsDecoratorColorElements pGraphicRootClassesItemsConnectionsItemsDecoratorColor;
	private final GraphicRootClassesItemsConnectionsItemsDecoratorWidthElements pGraphicRootClassesItemsConnectionsItemsDecoratorWidth;
	private final GraphicRootClassesItemsConnectionsItemsDecoratorPosElements pGraphicRootClassesItemsConnectionsItemsDecoratorPos;
	private final GraphicRootClassesItemsConnectionsItemsPatternElements pGraphicRootClassesItemsConnectionsItemsPattern;
	private final GraphicRootClassesItemsConnectionsItemsWidthElements pGraphicRootClassesItemsConnectionsItemsWidth;
	private final GraphicRootClassesItemsConnectionsItemsPositionElements pGraphicRootClassesItemsConnectionsItemsPosition;
	private final GraphicRootClassesItemsConnectionsItemsTargetElements pGraphicRootClassesItemsConnectionsItemsTarget;
	private final TerminalRule tINT;
	private final VALID_STRINGElements pVALID_STRING;
	private final TerminalRule tSTRING;
	private final TerminalRule tE_INT;
	private final KEYWORDElements pKEYWORD;
	private final TerminalRule tE_DOUBLE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GraphicGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGraphicRoot = new GraphicRootElements();
		this.pGraphicRootPropertiesAbstract = new GraphicRootPropertiesAbstractElements();
		this.pGraphicRootClassesItemsPropertiesAbstract = new GraphicRootClassesItemsPropertiesAbstractElements();
		this.pGraphicRootClassesItemsVersionsPropertiesAbstract = new GraphicRootClassesItemsVersionsPropertiesAbstractElements();
		this.pGraphicRootClassesItemsVnamePropertiesAbstract = new GraphicRootClassesItemsVnamePropertiesAbstractElements();
		this.pGraphicRootClassesItemsConstraintsPropertiesAbstract = new GraphicRootClassesItemsConstraintsPropertiesAbstractElements();
		this.pGraphicRootClassesItemsConnectionsItemsPropertiesAbstract = new GraphicRootClassesItemsConnectionsItemsPropertiesAbstractElements();
		this.pGraphicRootName = new GraphicRootNameElements();
		this.pGraphicRootURI = new GraphicRootURIElements();
		this.pGraphicRootClasses = new GraphicRootClassesElements();
		this.pEString = new EStringElements();
		this.pGraphicRootClassesItems = new GraphicRootClassesItemsElements();
		this.pGraphicRootClassesItemsName = new GraphicRootClassesItemsNameElements();
		this.pGraphicRootClassesItemsVersions = new GraphicRootClassesItemsVersionsElements();
		this.pGraphicRootClassesItemsVname = new GraphicRootClassesItemsVnameElements();
		this.pGraphicRootClassesItemsShowAttributes = new GraphicRootClassesItemsShowAttributesElements();
		this.pGraphicRootClassesItemsMaterialAttributes = new GraphicRootClassesItemsMaterialAttributesElements();
		this.pGraphicRootClassesItemsConstraints = new GraphicRootClassesItemsConstraintsElements();
		this.pGraphicRootClassesItemsConnections = new GraphicRootClassesItemsConnectionsElements();
		this.pGraphicRootClassesItemsVersionsV1 = new GraphicRootClassesItemsVersionsV1Elements();
		this.pGraphicRootClassesItemsVersionsV2 = new GraphicRootClassesItemsVersionsV2Elements();
		this.pGraphicRootClassesItemsVersionsV3 = new GraphicRootClassesItemsVersionsV3Elements();
		this.pGraphicRootClassesItemsVnameV1 = new GraphicRootClassesItemsVnameV1Elements();
		this.pGraphicRootClassesItemsVnameV2 = new GraphicRootClassesItemsVnameV2Elements();
		this.pGraphicRootClassesItemsVnameV3 = new GraphicRootClassesItemsVnameV3Elements();
		this.pGraphicRootClassesItemsShowAttributesItems = new GraphicRootClassesItemsShowAttributesItemsElements();
		this.pGraphicRootClassesItemsMaterialAttributesItems = new GraphicRootClassesItemsMaterialAttributesItemsElements();
		this.pGraphicRootClassesItemsConstraintsPlanes = new GraphicRootClassesItemsConstraintsPlanesElements();
		this.pGraphicRootClassesItemsConstraintsIlumination = new GraphicRootClassesItemsConstraintsIluminationElements();
		this.pGraphicRootClassesItemsConstraintsSizeMax = new GraphicRootClassesItemsConstraintsSizeMaxElements();
		this.pGraphicRootClassesItemsConstraintsSizeMin = new GraphicRootClassesItemsConstraintsSizeMinElements();
		this.pGraphicRootClassesItemsConstraintsSizeInit = new GraphicRootClassesItemsConstraintsSizeInitElements();
		this.pGraphicRootClassesItemsConstraintsOverlapping = new GraphicRootClassesItemsConstraintsOverlappingElements();
		this.pGraphicRootClassesItemsConstraintsXToOriginPos = new GraphicRootClassesItemsConstraintsXToOriginPosElements();
		this.pGraphicRootClassesItemsConstraintsYToOriginPos = new GraphicRootClassesItemsConstraintsYToOriginPosElements();
		this.pGraphicRootClassesItemsConstraintsZToOriginPos = new GraphicRootClassesItemsConstraintsZToOriginPosElements();
		this.pGraphicRootClassesItemsConstraintsRotation = new GraphicRootClassesItemsConstraintsRotationElements();
		this.pGraphicRootClassesItemsConstraintsText = new GraphicRootClassesItemsConstraintsTextElements();
		this.pGraphicRootClassesItemsConstraintsTrim = new GraphicRootClassesItemsConstraintsTrimElements();
		this.pGraphicRootClassesItemsConstraintsCategoryBitMask = new GraphicRootClassesItemsConstraintsCategoryBitMaskElements();
		this.pGraphicRootClassesItemsConstraintsCollisionBitMask = new GraphicRootClassesItemsConstraintsCollisionBitMaskElements();
		this.pGraphicRootClassesItemsConstraintsContactTestBitMask = new GraphicRootClassesItemsConstraintsContactTestBitMaskElements();
		this.pEBooleanObject = new EBooleanObjectElements();
		this.pEDoubleObject = new EDoubleObjectElements();
		this.pGraphicRootClassesItemsConnectionsItems = new GraphicRootClassesItemsConnectionsItemsElements();
		this.pGraphicRootClassesItemsConnectionsItemsName = new GraphicRootClassesItemsConnectionsItemsNameElements();
		this.pGraphicRootClassesItemsConnectionsItemsType = new GraphicRootClassesItemsConnectionsItemsTypeElements();
		this.pGraphicRootClassesItemsConnectionsItemsColor = new GraphicRootClassesItemsConnectionsItemsColorElements();
		this.pGraphicRootClassesItemsConnectionsItemsTextColor = new GraphicRootClassesItemsConnectionsItemsTextColorElements();
		this.pGraphicRootClassesItemsConnectionsItemsDecorator = new GraphicRootClassesItemsConnectionsItemsDecoratorElements();
		this.pGraphicRootClassesItemsConnectionsItemsDecoratorColor = new GraphicRootClassesItemsConnectionsItemsDecoratorColorElements();
		this.pGraphicRootClassesItemsConnectionsItemsDecoratorWidth = new GraphicRootClassesItemsConnectionsItemsDecoratorWidthElements();
		this.pGraphicRootClassesItemsConnectionsItemsDecoratorPos = new GraphicRootClassesItemsConnectionsItemsDecoratorPosElements();
		this.pGraphicRootClassesItemsConnectionsItemsPattern = new GraphicRootClassesItemsConnectionsItemsPatternElements();
		this.pGraphicRootClassesItemsConnectionsItemsWidth = new GraphicRootClassesItemsConnectionsItemsWidthElements();
		this.pGraphicRootClassesItemsConnectionsItemsPosition = new GraphicRootClassesItemsConnectionsItemsPositionElements();
		this.pGraphicRootClassesItemsConnectionsItemsTarget = new GraphicRootClassesItemsConnectionsItemsTargetElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.INT");
		this.pVALID_STRING = new VALID_STRINGElements();
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.STRING");
		this.tE_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.E_INT");
		this.pKEYWORD = new KEYWORDElements();
		this.tE_DOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "graphic.graphic.Graphic.E_DOUBLE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("graphic.graphic.Graphic".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////EClass GraphicRoot
	//GraphicRoot:
	//	{GraphicRoot}
	//	//EReference is not a keyword
	//	'{' (graphicRoot+=GraphicRootPropertiesAbstract ("," graphicRoot+=GraphicRootPropertiesAbstract)*)? '}';
	public GraphicRootElements getGraphicRootAccess() {
		return pGraphicRoot;
	}
	
	public ParserRule getGraphicRootRule() {
		return getGraphicRootAccess().getRule();
	}
	
	//GraphicRootPropertiesAbstract:
	//	GraphicRootName | GraphicRootURI | GraphicRootClasses;
	public GraphicRootPropertiesAbstractElements getGraphicRootPropertiesAbstractAccess() {
		return pGraphicRootPropertiesAbstract;
	}
	
	public ParserRule getGraphicRootPropertiesAbstractRule() {
		return getGraphicRootPropertiesAbstractAccess().getRule();
	}
	
	//GraphicRootClassesItemsPropertiesAbstract:
	//	GraphicRootClassesItemsName | GraphicRootClassesItemsVersions | GraphicRootClassesItemsVname |
	//	GraphicRootClassesItemsShowAttributes | GraphicRootClassesItemsMaterialAttributes |
	//	GraphicRootClassesItemsConstraints | GraphicRootClassesItemsConnections;
	public GraphicRootClassesItemsPropertiesAbstractElements getGraphicRootClassesItemsPropertiesAbstractAccess() {
		return pGraphicRootClassesItemsPropertiesAbstract;
	}
	
	public ParserRule getGraphicRootClassesItemsPropertiesAbstractRule() {
		return getGraphicRootClassesItemsPropertiesAbstractAccess().getRule();
	}
	
	//GraphicRootClassesItemsVersionsPropertiesAbstract:
	//	GraphicRootClassesItemsVersionsV1 | GraphicRootClassesItemsVersionsV2 | GraphicRootClassesItemsVersionsV3;
	public GraphicRootClassesItemsVersionsPropertiesAbstractElements getGraphicRootClassesItemsVersionsPropertiesAbstractAccess() {
		return pGraphicRootClassesItemsVersionsPropertiesAbstract;
	}
	
	public ParserRule getGraphicRootClassesItemsVersionsPropertiesAbstractRule() {
		return getGraphicRootClassesItemsVersionsPropertiesAbstractAccess().getRule();
	}
	
	//GraphicRootClassesItemsVnamePropertiesAbstract:
	//	GraphicRootClassesItemsVnameV1 | GraphicRootClassesItemsVnameV2 | GraphicRootClassesItemsVnameV3;
	public GraphicRootClassesItemsVnamePropertiesAbstractElements getGraphicRootClassesItemsVnamePropertiesAbstractAccess() {
		return pGraphicRootClassesItemsVnamePropertiesAbstract;
	}
	
	public ParserRule getGraphicRootClassesItemsVnamePropertiesAbstractRule() {
		return getGraphicRootClassesItemsVnamePropertiesAbstractAccess().getRule();
	}
	
	//GraphicRootClassesItemsConstraintsPropertiesAbstract:
	//	GraphicRootClassesItemsConstraintsPlanes | GraphicRootClassesItemsConstraintsIlumination |
	//	GraphicRootClassesItemsConstraintsSizeMax | GraphicRootClassesItemsConstraintsSizeMin |
	//	GraphicRootClassesItemsConstraintsSizeInit | GraphicRootClassesItemsConstraintsOverlapping |
	//	GraphicRootClassesItemsConstraintsXToOriginPos | GraphicRootClassesItemsConstraintsYToOriginPos |
	//	GraphicRootClassesItemsConstraintsZToOriginPos | GraphicRootClassesItemsConstraintsRotation |
	//	GraphicRootClassesItemsConstraintsText | GraphicRootClassesItemsConstraintsTrim |
	//	GraphicRootClassesItemsConstraintsCategoryBitMask | GraphicRootClassesItemsConstraintsCollisionBitMask |
	//	GraphicRootClassesItemsConstraintsContactTestBitMask;
	public GraphicRootClassesItemsConstraintsPropertiesAbstractElements getGraphicRootClassesItemsConstraintsPropertiesAbstractAccess() {
		return pGraphicRootClassesItemsConstraintsPropertiesAbstract;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsPropertiesAbstractRule() {
		return getGraphicRootClassesItemsConstraintsPropertiesAbstractAccess().getRule();
	}
	
	//GraphicRootClassesItemsConnectionsItemsPropertiesAbstract:
	//	GraphicRootClassesItemsConnectionsItemsName | GraphicRootClassesItemsConnectionsItemsType |
	//	GraphicRootClassesItemsConnectionsItemsColor | GraphicRootClassesItemsConnectionsItemsTextColor |
	//	GraphicRootClassesItemsConnectionsItemsDecorator | GraphicRootClassesItemsConnectionsItemsDecoratorColor |
	//	GraphicRootClassesItemsConnectionsItemsDecoratorWidth | GraphicRootClassesItemsConnectionsItemsDecoratorPos |
	//	GraphicRootClassesItemsConnectionsItemsPattern | GraphicRootClassesItemsConnectionsItemsWidth |
	//	GraphicRootClassesItemsConnectionsItemsPosition | GraphicRootClassesItemsConnectionsItemsTarget;
	public GraphicRootClassesItemsConnectionsItemsPropertiesAbstractElements getGraphicRootClassesItemsConnectionsItemsPropertiesAbstractAccess() {
		return pGraphicRootClassesItemsConnectionsItemsPropertiesAbstract;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsPropertiesAbstractRule() {
		return getGraphicRootClassesItemsConnectionsItemsPropertiesAbstractAccess().getRule();
	}
	
	////EClass GraphicRootName
	//GraphicRootName:
	//	{GraphicRootName}
	//	//Keyword´s Name
	//	//Keywords
	//	'"name"' ':'
	//	name=EString;
	public GraphicRootNameElements getGraphicRootNameAccess() {
		return pGraphicRootName;
	}
	
	public ParserRule getGraphicRootNameRule() {
		return getGraphicRootNameAccess().getRule();
	}
	
	////EClass GraphicRootURI
	//GraphicRootURI: //Keywords
	//	'"URI"' ':' URI=EString;
	public GraphicRootURIElements getGraphicRootURIAccess() {
		return pGraphicRootURI;
	}
	
	public ParserRule getGraphicRootURIRule() {
		return getGraphicRootURIAccess().getRule();
	}
	
	////EClass GraphicRootClasses
	//GraphicRootClasses:
	//	{GraphicRootClasses}
	//	//Keywords
	//	'"classes"' ':'
	//	'[' (classes+=GraphicRootClassesItems ("," classes+=GraphicRootClassesItems)*)? ']';
	public GraphicRootClassesElements getGraphicRootClassesAccess() {
		return pGraphicRootClasses;
	}
	
	public ParserRule getGraphicRootClassesRule() {
		return getGraphicRootClassesAccess().getRule();
	}
	
	//EString:
	//	VALID_STRING;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	////EClass GraphicRootClassesItems
	//GraphicRootClassesItems:
	//	{GraphicRootClassesItems}
	//	//EReference is not a keyword
	//	'{' (items+=GraphicRootClassesItemsPropertiesAbstract ("," items+=GraphicRootClassesItemsPropertiesAbstract)*)? '}';
	public GraphicRootClassesItemsElements getGraphicRootClassesItemsAccess() {
		return pGraphicRootClassesItems;
	}
	
	public ParserRule getGraphicRootClassesItemsRule() {
		return getGraphicRootClassesItemsAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsName
	//GraphicRootClassesItemsName:
	//	{GraphicRootClassesItemsName}
	//	//Keyword´s Name
	//	//Keywords
	//	'"name"' ':'
	//	name=EString;
	public GraphicRootClassesItemsNameElements getGraphicRootClassesItemsNameAccess() {
		return pGraphicRootClassesItemsName;
	}
	
	public ParserRule getGraphicRootClassesItemsNameRule() {
		return getGraphicRootClassesItemsNameAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsVersions
	//GraphicRootClassesItemsVersions:
	//	{GraphicRootClassesItemsVersions}
	//	//Keywords
	//	'"versions"' ':'
	//	'{' (versions+=GraphicRootClassesItemsVersionsPropertiesAbstract (","
	//	versions+=GraphicRootClassesItemsVersionsPropertiesAbstract)*)? '}';
	public GraphicRootClassesItemsVersionsElements getGraphicRootClassesItemsVersionsAccess() {
		return pGraphicRootClassesItemsVersions;
	}
	
	public ParserRule getGraphicRootClassesItemsVersionsRule() {
		return getGraphicRootClassesItemsVersionsAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsVname
	//GraphicRootClassesItemsVname:
	//	{GraphicRootClassesItemsVname}
	//	//Keywords
	//	'"vname"' ':'
	//	'{' (vname+=GraphicRootClassesItemsVnamePropertiesAbstract (","
	//	vname+=GraphicRootClassesItemsVnamePropertiesAbstract)*)? '}';
	public GraphicRootClassesItemsVnameElements getGraphicRootClassesItemsVnameAccess() {
		return pGraphicRootClassesItemsVname;
	}
	
	public ParserRule getGraphicRootClassesItemsVnameRule() {
		return getGraphicRootClassesItemsVnameAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsShowAttributes
	//GraphicRootClassesItemsShowAttributes:
	//	{GraphicRootClassesItemsShowAttributes}
	//	//Keywords
	//	'"showAttributes"' ':'
	//	'[' (showAttributes+=GraphicRootClassesItemsShowAttributesItems (","
	//	showAttributes+=GraphicRootClassesItemsShowAttributesItems)*)? ']';
	public GraphicRootClassesItemsShowAttributesElements getGraphicRootClassesItemsShowAttributesAccess() {
		return pGraphicRootClassesItemsShowAttributes;
	}
	
	public ParserRule getGraphicRootClassesItemsShowAttributesRule() {
		return getGraphicRootClassesItemsShowAttributesAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsMaterialAttributes
	//GraphicRootClassesItemsMaterialAttributes:
	//	{GraphicRootClassesItemsMaterialAttributes}
	//	//Keywords
	//	'"materialAttributes"' ':'
	//	'[' (materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems (","
	//	materialAttributes+=GraphicRootClassesItemsMaterialAttributesItems)*)? ']';
	public GraphicRootClassesItemsMaterialAttributesElements getGraphicRootClassesItemsMaterialAttributesAccess() {
		return pGraphicRootClassesItemsMaterialAttributes;
	}
	
	public ParserRule getGraphicRootClassesItemsMaterialAttributesRule() {
		return getGraphicRootClassesItemsMaterialAttributesAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraints
	//GraphicRootClassesItemsConstraints:
	//	{GraphicRootClassesItemsConstraints}
	//	//Keywords
	//	'"constraints"' ':'
	//	'{' (constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract (","
	//	constraints+=GraphicRootClassesItemsConstraintsPropertiesAbstract)*)? '}';
	public GraphicRootClassesItemsConstraintsElements getGraphicRootClassesItemsConstraintsAccess() {
		return pGraphicRootClassesItemsConstraints;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsRule() {
		return getGraphicRootClassesItemsConstraintsAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnections
	//GraphicRootClassesItemsConnections:
	//	{GraphicRootClassesItemsConnections}
	//	//Keywords
	//	'"connections"' ':'
	//	'[' (connections+=GraphicRootClassesItemsConnectionsItems (","
	//	connections+=GraphicRootClassesItemsConnectionsItems)*)? ']';
	public GraphicRootClassesItemsConnectionsElements getGraphicRootClassesItemsConnectionsAccess() {
		return pGraphicRootClassesItemsConnections;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsRule() {
		return getGraphicRootClassesItemsConnectionsAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsVersionsV1
	//GraphicRootClassesItemsVersionsV1: //Keywords
	//	'"v1"' ':' v1=EString;
	public GraphicRootClassesItemsVersionsV1Elements getGraphicRootClassesItemsVersionsV1Access() {
		return pGraphicRootClassesItemsVersionsV1;
	}
	
	public ParserRule getGraphicRootClassesItemsVersionsV1Rule() {
		return getGraphicRootClassesItemsVersionsV1Access().getRule();
	}
	
	////EClass GraphicRootClassesItemsVersionsV2
	//GraphicRootClassesItemsVersionsV2: //Keywords
	//	'"v2"' ':' v2=EString;
	public GraphicRootClassesItemsVersionsV2Elements getGraphicRootClassesItemsVersionsV2Access() {
		return pGraphicRootClassesItemsVersionsV2;
	}
	
	public ParserRule getGraphicRootClassesItemsVersionsV2Rule() {
		return getGraphicRootClassesItemsVersionsV2Access().getRule();
	}
	
	////EClass GraphicRootClassesItemsVersionsV3
	//GraphicRootClassesItemsVersionsV3: //Keywords
	//	'"v3"' ':' v3=EString;
	public GraphicRootClassesItemsVersionsV3Elements getGraphicRootClassesItemsVersionsV3Access() {
		return pGraphicRootClassesItemsVersionsV3;
	}
	
	public ParserRule getGraphicRootClassesItemsVersionsV3Rule() {
		return getGraphicRootClassesItemsVersionsV3Access().getRule();
	}
	
	////EClass GraphicRootClassesItemsVnameV1
	//GraphicRootClassesItemsVnameV1: //Keywords
	//	'"v1"' ':' v1=EString;
	public GraphicRootClassesItemsVnameV1Elements getGraphicRootClassesItemsVnameV1Access() {
		return pGraphicRootClassesItemsVnameV1;
	}
	
	public ParserRule getGraphicRootClassesItemsVnameV1Rule() {
		return getGraphicRootClassesItemsVnameV1Access().getRule();
	}
	
	////EClass GraphicRootClassesItemsVnameV2
	//GraphicRootClassesItemsVnameV2: //Keywords
	//	'"v2"' ':' v2=EString;
	public GraphicRootClassesItemsVnameV2Elements getGraphicRootClassesItemsVnameV2Access() {
		return pGraphicRootClassesItemsVnameV2;
	}
	
	public ParserRule getGraphicRootClassesItemsVnameV2Rule() {
		return getGraphicRootClassesItemsVnameV2Access().getRule();
	}
	
	////EClass GraphicRootClassesItemsVnameV3
	//GraphicRootClassesItemsVnameV3: //Keywords
	//	'"v3"' ':' v3=EString;
	public GraphicRootClassesItemsVnameV3Elements getGraphicRootClassesItemsVnameV3Access() {
		return pGraphicRootClassesItemsVnameV3;
	}
	
	public ParserRule getGraphicRootClassesItemsVnameV3Rule() {
		return getGraphicRootClassesItemsVnameV3Access().getRule();
	}
	
	////EClass GraphicRootClassesItemsShowAttributesItems
	//GraphicRootClassesItemsShowAttributesItems:
	//	items=EString;
	public GraphicRootClassesItemsShowAttributesItemsElements getGraphicRootClassesItemsShowAttributesItemsAccess() {
		return pGraphicRootClassesItemsShowAttributesItems;
	}
	
	public ParserRule getGraphicRootClassesItemsShowAttributesItemsRule() {
		return getGraphicRootClassesItemsShowAttributesItemsAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsMaterialAttributesItems
	//GraphicRootClassesItemsMaterialAttributesItems:
	//	items=EString;
	public GraphicRootClassesItemsMaterialAttributesItemsElements getGraphicRootClassesItemsMaterialAttributesItemsAccess() {
		return pGraphicRootClassesItemsMaterialAttributesItems;
	}
	
	public ParserRule getGraphicRootClassesItemsMaterialAttributesItemsRule() {
		return getGraphicRootClassesItemsMaterialAttributesItemsAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsPlanes
	//GraphicRootClassesItemsConstraintsPlanes: //Keywords
	//	'"planes"' ':' planes=EString;
	public GraphicRootClassesItemsConstraintsPlanesElements getGraphicRootClassesItemsConstraintsPlanesAccess() {
		return pGraphicRootClassesItemsConstraintsPlanes;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsPlanesRule() {
		return getGraphicRootClassesItemsConstraintsPlanesAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsIlumination
	//GraphicRootClassesItemsConstraintsIlumination: //Keywords
	//	'"ilumination"' ':' ilumination=EString;
	public GraphicRootClassesItemsConstraintsIluminationElements getGraphicRootClassesItemsConstraintsIluminationAccess() {
		return pGraphicRootClassesItemsConstraintsIlumination;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsIluminationRule() {
		return getGraphicRootClassesItemsConstraintsIluminationAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsSizeMax
	//GraphicRootClassesItemsConstraintsSizeMax: //Keywords
	//	'"sizeMax"' ':' sizeMax=EString;
	public GraphicRootClassesItemsConstraintsSizeMaxElements getGraphicRootClassesItemsConstraintsSizeMaxAccess() {
		return pGraphicRootClassesItemsConstraintsSizeMax;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsSizeMaxRule() {
		return getGraphicRootClassesItemsConstraintsSizeMaxAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsSizeMin
	//GraphicRootClassesItemsConstraintsSizeMin: //Keywords
	//	'"sizeMin"' ':' sizeMin=EString;
	public GraphicRootClassesItemsConstraintsSizeMinElements getGraphicRootClassesItemsConstraintsSizeMinAccess() {
		return pGraphicRootClassesItemsConstraintsSizeMin;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsSizeMinRule() {
		return getGraphicRootClassesItemsConstraintsSizeMinAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsSizeInit
	//GraphicRootClassesItemsConstraintsSizeInit: //Keywords
	//	'"sizeInit"' ':' sizeInit=EString;
	public GraphicRootClassesItemsConstraintsSizeInitElements getGraphicRootClassesItemsConstraintsSizeInitAccess() {
		return pGraphicRootClassesItemsConstraintsSizeInit;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsSizeInitRule() {
		return getGraphicRootClassesItemsConstraintsSizeInitAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsOverlapping
	//GraphicRootClassesItemsConstraintsOverlapping: //Keywords
	//	'"overlapping"' ':' overlapping=EString;
	public GraphicRootClassesItemsConstraintsOverlappingElements getGraphicRootClassesItemsConstraintsOverlappingAccess() {
		return pGraphicRootClassesItemsConstraintsOverlapping;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsOverlappingRule() {
		return getGraphicRootClassesItemsConstraintsOverlappingAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsXToOriginPos
	//GraphicRootClassesItemsConstraintsXToOriginPos: //Keywords
	//	'"xToOriginPos"' ':' xToOriginPos=EString;
	public GraphicRootClassesItemsConstraintsXToOriginPosElements getGraphicRootClassesItemsConstraintsXToOriginPosAccess() {
		return pGraphicRootClassesItemsConstraintsXToOriginPos;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsXToOriginPosRule() {
		return getGraphicRootClassesItemsConstraintsXToOriginPosAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsYToOriginPos
	//GraphicRootClassesItemsConstraintsYToOriginPos: //Keywords
	//	'"yToOriginPos"' ':' yToOriginPos=EString;
	public GraphicRootClassesItemsConstraintsYToOriginPosElements getGraphicRootClassesItemsConstraintsYToOriginPosAccess() {
		return pGraphicRootClassesItemsConstraintsYToOriginPos;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsYToOriginPosRule() {
		return getGraphicRootClassesItemsConstraintsYToOriginPosAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsZToOriginPos
	//GraphicRootClassesItemsConstraintsZToOriginPos: //Keywords
	//	'"zToOriginPos"' ':' zToOriginPos=EString;
	public GraphicRootClassesItemsConstraintsZToOriginPosElements getGraphicRootClassesItemsConstraintsZToOriginPosAccess() {
		return pGraphicRootClassesItemsConstraintsZToOriginPos;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsZToOriginPosRule() {
		return getGraphicRootClassesItemsConstraintsZToOriginPosAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsRotation
	//GraphicRootClassesItemsConstraintsRotation: //Keywords
	//	'"rotation"' ':' rotation=EString;
	public GraphicRootClassesItemsConstraintsRotationElements getGraphicRootClassesItemsConstraintsRotationAccess() {
		return pGraphicRootClassesItemsConstraintsRotation;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsRotationRule() {
		return getGraphicRootClassesItemsConstraintsRotationAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsText
	//GraphicRootClassesItemsConstraintsText: //Keywords
	//	'"text"' ':' text=EString;
	public GraphicRootClassesItemsConstraintsTextElements getGraphicRootClassesItemsConstraintsTextAccess() {
		return pGraphicRootClassesItemsConstraintsText;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsTextRule() {
		return getGraphicRootClassesItemsConstraintsTextAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsTrim
	//GraphicRootClassesItemsConstraintsTrim: //Keywords
	//	'"trim"' ':' trim=EBooleanObject;
	public GraphicRootClassesItemsConstraintsTrimElements getGraphicRootClassesItemsConstraintsTrimAccess() {
		return pGraphicRootClassesItemsConstraintsTrim;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsTrimRule() {
		return getGraphicRootClassesItemsConstraintsTrimAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsCategoryBitMask
	//GraphicRootClassesItemsConstraintsCategoryBitMask: //Keywords
	//	'"categoryBitMask"' ':' categoryBitMask=EDoubleObject;
	public GraphicRootClassesItemsConstraintsCategoryBitMaskElements getGraphicRootClassesItemsConstraintsCategoryBitMaskAccess() {
		return pGraphicRootClassesItemsConstraintsCategoryBitMask;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsCategoryBitMaskRule() {
		return getGraphicRootClassesItemsConstraintsCategoryBitMaskAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsCollisionBitMask
	//GraphicRootClassesItemsConstraintsCollisionBitMask: //Keywords
	//	'"collisionBitMask"' ':' collisionBitMask=EDoubleObject;
	public GraphicRootClassesItemsConstraintsCollisionBitMaskElements getGraphicRootClassesItemsConstraintsCollisionBitMaskAccess() {
		return pGraphicRootClassesItemsConstraintsCollisionBitMask;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsCollisionBitMaskRule() {
		return getGraphicRootClassesItemsConstraintsCollisionBitMaskAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConstraintsContactTestBitMask
	//GraphicRootClassesItemsConstraintsContactTestBitMask: //Keywords
	//	'"contactTestBitMask"' ':' contactTestBitMask=EDoubleObject;
	public GraphicRootClassesItemsConstraintsContactTestBitMaskElements getGraphicRootClassesItemsConstraintsContactTestBitMaskAccess() {
		return pGraphicRootClassesItemsConstraintsContactTestBitMask;
	}
	
	public ParserRule getGraphicRootClassesItemsConstraintsContactTestBitMaskRule() {
		return getGraphicRootClassesItemsConstraintsContactTestBitMaskAccess().getRule();
	}
	
	//EBooleanObject ecore::EBooleanObject:
	//	'true' | 'false';
	public EBooleanObjectElements getEBooleanObjectAccess() {
		return pEBooleanObject;
	}
	
	public ParserRule getEBooleanObjectRule() {
		return getEBooleanObjectAccess().getRule();
	}
	
	//EDoubleObject ecore::EDoubleObject:
	//	E_INT | E_DOUBLE;
	public EDoubleObjectElements getEDoubleObjectAccess() {
		return pEDoubleObject;
	}
	
	public ParserRule getEDoubleObjectRule() {
		return getEDoubleObjectAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItems
	//GraphicRootClassesItemsConnectionsItems:
	//	{GraphicRootClassesItemsConnectionsItems}
	//	//EReference is not a keyword
	//	'{' (items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract (","
	//	items+=GraphicRootClassesItemsConnectionsItemsPropertiesAbstract)*)? '}';
	public GraphicRootClassesItemsConnectionsItemsElements getGraphicRootClassesItemsConnectionsItemsAccess() {
		return pGraphicRootClassesItemsConnectionsItems;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsRule() {
		return getGraphicRootClassesItemsConnectionsItemsAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsName
	//GraphicRootClassesItemsConnectionsItemsName:
	//	{GraphicRootClassesItemsConnectionsItemsName}
	//	//Keyword´s Name
	//	//Keywords
	//	'"name"' ':'
	//	name=EString;
	public GraphicRootClassesItemsConnectionsItemsNameElements getGraphicRootClassesItemsConnectionsItemsNameAccess() {
		return pGraphicRootClassesItemsConnectionsItemsName;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsNameRule() {
		return getGraphicRootClassesItemsConnectionsItemsNameAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsType
	//GraphicRootClassesItemsConnectionsItemsType: //Keywords
	//	'"type"' ':' type=EString;
	public GraphicRootClassesItemsConnectionsItemsTypeElements getGraphicRootClassesItemsConnectionsItemsTypeAccess() {
		return pGraphicRootClassesItemsConnectionsItemsType;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsTypeRule() {
		return getGraphicRootClassesItemsConnectionsItemsTypeAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsColor
	//GraphicRootClassesItemsConnectionsItemsColor: //Keywords
	//	'"color"' ':' color=EString;
	public GraphicRootClassesItemsConnectionsItemsColorElements getGraphicRootClassesItemsConnectionsItemsColorAccess() {
		return pGraphicRootClassesItemsConnectionsItemsColor;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsColorRule() {
		return getGraphicRootClassesItemsConnectionsItemsColorAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsTextColor
	//GraphicRootClassesItemsConnectionsItemsTextColor: //Keywords
	//	'"textColor"' ':' textColor=EString;
	public GraphicRootClassesItemsConnectionsItemsTextColorElements getGraphicRootClassesItemsConnectionsItemsTextColorAccess() {
		return pGraphicRootClassesItemsConnectionsItemsTextColor;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsTextColorRule() {
		return getGraphicRootClassesItemsConnectionsItemsTextColorAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsDecorator
	//GraphicRootClassesItemsConnectionsItemsDecorator: //Keywords
	//	'"decorator"' ':' decorator=EString;
	public GraphicRootClassesItemsConnectionsItemsDecoratorElements getGraphicRootClassesItemsConnectionsItemsDecoratorAccess() {
		return pGraphicRootClassesItemsConnectionsItemsDecorator;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsDecoratorRule() {
		return getGraphicRootClassesItemsConnectionsItemsDecoratorAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsDecoratorColor
	//GraphicRootClassesItemsConnectionsItemsDecoratorColor: //Keywords
	//	'"decoratorColor"' ':' decoratorColor=EString;
	public GraphicRootClassesItemsConnectionsItemsDecoratorColorElements getGraphicRootClassesItemsConnectionsItemsDecoratorColorAccess() {
		return pGraphicRootClassesItemsConnectionsItemsDecoratorColor;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsDecoratorColorRule() {
		return getGraphicRootClassesItemsConnectionsItemsDecoratorColorAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsDecoratorWidth
	//GraphicRootClassesItemsConnectionsItemsDecoratorWidth: //Keywords
	//	'"decoratorWidth"' ':' decoratorWidth=EString;
	public GraphicRootClassesItemsConnectionsItemsDecoratorWidthElements getGraphicRootClassesItemsConnectionsItemsDecoratorWidthAccess() {
		return pGraphicRootClassesItemsConnectionsItemsDecoratorWidth;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsDecoratorWidthRule() {
		return getGraphicRootClassesItemsConnectionsItemsDecoratorWidthAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsDecoratorPos
	//GraphicRootClassesItemsConnectionsItemsDecoratorPos: //Keywords
	//	'"decoratorPos"' ':' decoratorPos=EString;
	public GraphicRootClassesItemsConnectionsItemsDecoratorPosElements getGraphicRootClassesItemsConnectionsItemsDecoratorPosAccess() {
		return pGraphicRootClassesItemsConnectionsItemsDecoratorPos;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsDecoratorPosRule() {
		return getGraphicRootClassesItemsConnectionsItemsDecoratorPosAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsPattern
	//GraphicRootClassesItemsConnectionsItemsPattern: //Keywords
	//	'"pattern"' ':' pattern=EString;
	public GraphicRootClassesItemsConnectionsItemsPatternElements getGraphicRootClassesItemsConnectionsItemsPatternAccess() {
		return pGraphicRootClassesItemsConnectionsItemsPattern;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsPatternRule() {
		return getGraphicRootClassesItemsConnectionsItemsPatternAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsWidth
	//GraphicRootClassesItemsConnectionsItemsWidth: //Keywords
	//	'"width"' ':' width=EString;
	public GraphicRootClassesItemsConnectionsItemsWidthElements getGraphicRootClassesItemsConnectionsItemsWidthAccess() {
		return pGraphicRootClassesItemsConnectionsItemsWidth;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsWidthRule() {
		return getGraphicRootClassesItemsConnectionsItemsWidthAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsPosition
	//GraphicRootClassesItemsConnectionsItemsPosition: //Keywords
	//	'"position"' ':' position=EString;
	public GraphicRootClassesItemsConnectionsItemsPositionElements getGraphicRootClassesItemsConnectionsItemsPositionAccess() {
		return pGraphicRootClassesItemsConnectionsItemsPosition;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsPositionRule() {
		return getGraphicRootClassesItemsConnectionsItemsPositionAccess().getRule();
	}
	
	////EClass GraphicRootClassesItemsConnectionsItemsTarget
	//GraphicRootClassesItemsConnectionsItemsTarget: //Keywords
	//	'"target"' ':' target=EString;
	public GraphicRootClassesItemsConnectionsItemsTargetElements getGraphicRootClassesItemsConnectionsItemsTargetAccess() {
		return pGraphicRootClassesItemsConnectionsItemsTarget;
	}
	
	public ParserRule getGraphicRootClassesItemsConnectionsItemsTargetRule() {
		return getGraphicRootClassesItemsConnectionsItemsTargetAccess().getRule();
	}
	
	//@Override
	//terminal INT returns ecore::EInt:
	//	'0' | '1'..'9' '0'..'9'*;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//VALID_STRING:
	//	STRING | KEYWORD;
	public VALID_STRINGElements getVALID_STRINGAccess() {
		return pVALID_STRING;
	}
	
	public ParserRule getVALID_STRINGRule() {
		return getVALID_STRINGAccess().getRule();
	}
	
	//@Override
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"';
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal E_INT:
	//	'-'? INT;
	public TerminalRule getE_INTRule() {
		return tE_INT;
	}
	
	//KEYWORD:
	//	'"decorator"' |
	//	'"xToOriginPos"' |
	//	'"color"' |
	//	'"showAttributes"' |
	//	'"classes"' |
	//	'"sizeInit"' |
	//	'"pattern"' |
	//	'"type"' |
	//	'"URI"' |
	//	'"constraints"' |
	//	'"categoryBitMask"' |
	//	'"trim"' |
	//	'"text"' |
	//	'"sizeMax"' |
	//	'"connections"' |
	//	'"collisionBitMask"' |
	//	'"contactTestBitMask"' |
	//	'"zToOriginPos"' |
	//	'"rotation"' |
	//	'"planes"' |
	//	'"textColor"' |
	//	'"sizeMin"' |
	//	'"decoratorPos"' |
	//	'"target"' |
	//	'"yToOriginPos"' |
	//	'"materialAttributes"' |
	//	'"vname"' |
	//	'"decoratorColor"' |
	//	'"versions"' |
	//	'"ilumination"' |
	//	'"overlapping"' |
	//	'"name"' |
	//	'"width"' |
	//	'"decoratorWidth"' |
	//	'"v1"' |
	//	'"position"' |
	//	'"v2"' |
	//	'"v3"';
	public KEYWORDElements getKEYWORDAccess() {
		return pKEYWORD;
	}
	
	public ParserRule getKEYWORDRule() {
		return getKEYWORDAccess().getRule();
	}
	
	//terminal E_DOUBLE:
	//	'-'? INT ('.' INT+)? (('E' | 'e') ('+' | '-')? INT)?;
	public TerminalRule getE_DOUBLERule() {
		return tE_DOUBLE;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}

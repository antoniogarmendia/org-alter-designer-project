/**
 * generated by Xtext 2.23.0
 */
package graphic.graphic.formatting2;

import com.google.inject.Inject;
import graphic.GraphicRoot;
import graphic.GraphicRootClasses;
import graphic.GraphicRootClassesItems;
import graphic.GraphicRootPropertiesAbstract;
import graphic.graphic.services.GraphicGrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class GraphicFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private GraphicGrammarAccess _graphicGrammarAccess;
  
  protected void _format(final GraphicRoot graphicRoot, @Extension final IFormattableDocument document) {
    EList<GraphicRootPropertiesAbstract> _graphicRoot = graphicRoot.getGraphicRoot();
    for (final GraphicRootPropertiesAbstract graphicRootPropertiesAbstract : _graphicRoot) {
      document.<GraphicRootPropertiesAbstract>format(graphicRootPropertiesAbstract);
    }
  }
  
  protected void _format(final GraphicRootClasses graphicRootClasses, @Extension final IFormattableDocument document) {
    EList<GraphicRootClassesItems> _classes = graphicRootClasses.getClasses();
    for (final GraphicRootClassesItems graphicRootClassesItems : _classes) {
      document.<GraphicRootClassesItems>format(graphicRootClassesItems);
    }
  }
  
  public void format(final Object graphicRootClasses, final IFormattableDocument document) {
    if (graphicRootClasses instanceof XtextResource) {
      _format((XtextResource)graphicRootClasses, document);
      return;
    } else if (graphicRootClasses instanceof GraphicRootClasses) {
      _format((GraphicRootClasses)graphicRootClasses, document);
      return;
    } else if (graphicRootClasses instanceof GraphicRoot) {
      _format((GraphicRoot)graphicRootClasses, document);
      return;
    } else if (graphicRootClasses instanceof EObject) {
      _format((EObject)graphicRootClasses, document);
      return;
    } else if (graphicRootClasses == null) {
      _format((Void)null, document);
      return;
    } else if (graphicRootClasses != null) {
      _format(graphicRootClasses, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(graphicRootClasses, document).toString());
    }
  }
}

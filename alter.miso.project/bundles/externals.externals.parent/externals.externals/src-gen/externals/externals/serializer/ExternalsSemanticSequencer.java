/*
 * generated by Xtext 2.23.0
 */
package externals.externals.serializer;

import com.google.inject.Inject;
import externals.ExternalsPackage;
import externals.ExternalsRoot;
import externals.ExternalsRootAPIDescriptions;
import externals.ExternalsRootAPIDescriptionsItems;
import externals.ExternalsRootAPIDescriptionsItemsAPIAuth;
import externals.ExternalsRootAPIDescriptionsItemsAPIAuthItems;
import externals.ExternalsRootAPIDescriptionsItemsAPIAuthItemsKey;
import externals.ExternalsRootAPIDescriptionsItemsAPIAuthItemsName;
import externals.ExternalsRootAPIDescriptionsItemsName;
import externals.ExternalsRootAPIDescriptionsItemsPaths;
import externals.ExternalsRootAPIDescriptionsItemsPathsItems;
import externals.ExternalsRootAPIDescriptionsItemsPathsItemsOutputs;
import externals.ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItems;
import externals.ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsJSONPath;
import externals.ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsName;
import externals.ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsType;
import externals.ExternalsRootAPIDescriptionsItemsPathsItemsParameters;
import externals.ExternalsRootAPIDescriptionsItemsPathsItemsParametersItems;
import externals.ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsName;
import externals.ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsType;
import externals.ExternalsRootAPIDescriptionsItemsPathsItemsRoute;
import externals.ExternalsRootAPIDescriptionsItemsProtocol;
import externals.ExternalsRootAPIDescriptionsItemsUrl;
import externals.externals.services.ExternalsGrammarAccess;
import java.util.Set;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Parameter;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.serializer.ISerializationContext;
import org.eclipse.xtext.serializer.acceptor.SequenceFeeder;
import org.eclipse.xtext.serializer.sequencer.AbstractDelegatingSemanticSequencer;
import org.eclipse.xtext.serializer.sequencer.ITransientValueService.ValueTransient;

@SuppressWarnings("all")
public class ExternalsSemanticSequencer extends AbstractDelegatingSemanticSequencer {

	@Inject
	private ExternalsGrammarAccess grammarAccess;
	
	@Override
	public void sequence(ISerializationContext context, EObject semanticObject) {
		EPackage epackage = semanticObject.eClass().getEPackage();
		ParserRule rule = context.getParserRule();
		Action action = context.getAssignedAction();
		Set<Parameter> parameters = context.getEnabledBooleanParameters();
		if (epackage == ExternalsPackage.eINSTANCE)
			switch (semanticObject.eClass().getClassifierID()) {
			case ExternalsPackage.EXTERNALS_ROOT:
				sequence_ExternalsRoot(context, (ExternalsRoot) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS:
				sequence_ExternalsRootAPIDescriptions(context, (ExternalsRootAPIDescriptions) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS:
				sequence_ExternalsRootAPIDescriptionsItems(context, (ExternalsRootAPIDescriptionsItems) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_API_AUTH:
				sequence_ExternalsRootAPIDescriptionsItemsAPIAuth(context, (ExternalsRootAPIDescriptionsItemsAPIAuth) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_API_AUTH_ITEMS:
				sequence_ExternalsRootAPIDescriptionsItemsAPIAuthItems(context, (ExternalsRootAPIDescriptionsItemsAPIAuthItems) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_API_AUTH_ITEMS_KEY:
				sequence_ExternalsRootAPIDescriptionsItemsAPIAuthItemsKey(context, (ExternalsRootAPIDescriptionsItemsAPIAuthItemsKey) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_API_AUTH_ITEMS_NAME:
				sequence_ExternalsRootAPIDescriptionsItemsAPIAuthItemsName(context, (ExternalsRootAPIDescriptionsItemsAPIAuthItemsName) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_NAME:
				sequence_ExternalsRootAPIDescriptionsItemsName(context, (ExternalsRootAPIDescriptionsItemsName) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS:
				sequence_ExternalsRootAPIDescriptionsItemsPaths(context, (ExternalsRootAPIDescriptionsItemsPaths) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItems(context, (ExternalsRootAPIDescriptionsItemsPathsItems) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItemsOutputs(context, (ExternalsRootAPIDescriptionsItemsPathsItemsOutputs) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS_ITEMS:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItems(context, (ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItems) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS_ITEMS_JSON_PATH:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsJSONPath(context, (ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsJSONPath) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS_ITEMS_NAME:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsName(context, (ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsName) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS_ITEMS_TYPE:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsType(context, (ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsType) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_PARAMETERS:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItemsParameters(context, (ExternalsRootAPIDescriptionsItemsPathsItemsParameters) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_PARAMETERS_ITEMS:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItemsParametersItems(context, (ExternalsRootAPIDescriptionsItemsPathsItemsParametersItems) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_PARAMETERS_ITEMS_NAME:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsName(context, (ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsName) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_PARAMETERS_ITEMS_TYPE:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsType(context, (ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsType) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_ROUTE:
				sequence_ExternalsRootAPIDescriptionsItemsPathsItemsRoute(context, (ExternalsRootAPIDescriptionsItemsPathsItemsRoute) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PROTOCOL:
				sequence_ExternalsRootAPIDescriptionsItemsProtocol(context, (ExternalsRootAPIDescriptionsItemsProtocol) semanticObject); 
				return; 
			case ExternalsPackage.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_URL:
				sequence_ExternalsRootAPIDescriptionsItemsUrl(context, (ExternalsRootAPIDescriptionsItemsUrl) semanticObject); 
				return; 
			}
		if (errorAcceptor != null)
			errorAcceptor.accept(diagnosticProvider.createInvalidContextOrTypeDiagnostic(semanticObject, context));
	}
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsAPIAuthItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsAPIAuthItemsKey
	 *     ExternalsRootAPIDescriptionsItemsAPIAuthItemsKey returns ExternalsRootAPIDescriptionsItemsAPIAuthItemsKey
	 *
	 * Constraint:
	 *     key=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsAPIAuthItemsKey(ISerializationContext context, ExternalsRootAPIDescriptionsItemsAPIAuthItemsKey semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_API_AUTH_ITEMS_KEY__KEY) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_API_AUTH_ITEMS_KEY__KEY));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsAPIAuthItemsKeyAccess().getKeyEStringParserRuleCall_2_0(), semanticObject.getKey());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsAPIAuthItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsAPIAuthItemsName
	 *     ExternalsRootAPIDescriptionsItemsAPIAuthItemsName returns ExternalsRootAPIDescriptionsItemsAPIAuthItemsName
	 *
	 * Constraint:
	 *     name=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsAPIAuthItemsName(ISerializationContext context, ExternalsRootAPIDescriptionsItemsAPIAuthItemsName semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_API_AUTH_ITEMS_NAME__NAME) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_API_AUTH_ITEMS_NAME__NAME));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsAPIAuthItemsNameAccess().getNameEStringParserRuleCall_3_0(), semanticObject.getName());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsAPIAuthItems returns ExternalsRootAPIDescriptionsItemsAPIAuthItems
	 *
	 * Constraint:
	 *     (
	 *         items+=ExternalsRootAPIDescriptionsItemsAPIAuthItemsPropertiesAbstract 
	 *         items+=ExternalsRootAPIDescriptionsItemsAPIAuthItemsPropertiesAbstract*
	 *     )?
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsAPIAuthItems(ISerializationContext context, ExternalsRootAPIDescriptionsItemsAPIAuthItems semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsAPIAuth
	 *     ExternalsRootAPIDescriptionsItemsAPIAuth returns ExternalsRootAPIDescriptionsItemsAPIAuth
	 *
	 * Constraint:
	 *     (APIAuth+=ExternalsRootAPIDescriptionsItemsAPIAuthItems APIAuth+=ExternalsRootAPIDescriptionsItemsAPIAuthItems*)?
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsAPIAuth(ISerializationContext context, ExternalsRootAPIDescriptionsItemsAPIAuth semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsName
	 *     ExternalsRootAPIDescriptionsItemsName returns ExternalsRootAPIDescriptionsItemsName
	 *
	 * Constraint:
	 *     name=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsName(ISerializationContext context, ExternalsRootAPIDescriptionsItemsName semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_NAME__NAME) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_NAME__NAME));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsNameAccess().getNameEStringParserRuleCall_3_0(), semanticObject.getName());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsJSONPath
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsJSONPath returns ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsJSONPath
	 *
	 * Constraint:
	 *     JSONPath=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsJSONPath(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsJSONPath semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS_ITEMS_JSON_PATH__JSON_PATH) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS_ITEMS_JSON_PATH__JSON_PATH));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsJSONPathAccess().getJSONPathEStringParserRuleCall_2_0(), semanticObject.getJSONPath());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsName
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsName returns ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsName
	 *
	 * Constraint:
	 *     name=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsName(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsName semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS_ITEMS_NAME__NAME) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS_ITEMS_NAME__NAME));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsNameAccess().getNameEStringParserRuleCall_3_0(), semanticObject.getName());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsType
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsType returns ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsType
	 *
	 * Constraint:
	 *     type=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsType(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsType semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS_ITEMS_TYPE__TYPE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_OUTPUTS_ITEMS_TYPE__TYPE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsTypeAccess().getTypeEStringParserRuleCall_2_0(), semanticObject.getType());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItems returns ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItems
	 *
	 * Constraint:
	 *     (
	 *         items+=ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsPropertiesAbstract 
	 *         items+=ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItemsPropertiesAbstract*
	 *     )?
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItems(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItems semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsPathsItemsOutputs
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsOutputs returns ExternalsRootAPIDescriptionsItemsPathsItemsOutputs
	 *
	 * Constraint:
	 *     (outputs+=ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItems outputs+=ExternalsRootAPIDescriptionsItemsPathsItemsOutputsItems*)?
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItemsOutputs(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItemsOutputs semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsName
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsName returns ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsName
	 *
	 * Constraint:
	 *     name=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsName(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsName semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_PARAMETERS_ITEMS_NAME__NAME) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_PARAMETERS_ITEMS_NAME__NAME));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsNameAccess().getNameEStringParserRuleCall_3_0(), semanticObject.getName());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsType
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsType returns ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsType
	 *
	 * Constraint:
	 *     type=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsType(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsType semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_PARAMETERS_ITEMS_TYPE__TYPE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_PARAMETERS_ITEMS_TYPE__TYPE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsTypeAccess().getTypeEStringParserRuleCall_2_0(), semanticObject.getType());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsParametersItems returns ExternalsRootAPIDescriptionsItemsPathsItemsParametersItems
	 *
	 * Constraint:
	 *     (
	 *         items+=ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsPropertiesAbstract 
	 *         items+=ExternalsRootAPIDescriptionsItemsPathsItemsParametersItemsPropertiesAbstract*
	 *     )?
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItemsParametersItems(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItemsParametersItems semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsPathsItemsParameters
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsParameters returns ExternalsRootAPIDescriptionsItemsPathsItemsParameters
	 *
	 * Constraint:
	 *     (
	 *         parameters+=ExternalsRootAPIDescriptionsItemsPathsItemsParametersItems 
	 *         parameters+=ExternalsRootAPIDescriptionsItemsPathsItemsParametersItems*
	 *     )?
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItemsParameters(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItemsParameters semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsPathsItemsRoute
	 *     ExternalsRootAPIDescriptionsItemsPathsItemsRoute returns ExternalsRootAPIDescriptionsItemsPathsItemsRoute
	 *
	 * Constraint:
	 *     route=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItemsRoute(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItemsRoute semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_ROUTE__ROUTE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PATHS_ITEMS_ROUTE__ROUTE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsPathsItemsRouteAccess().getRouteEStringParserRuleCall_2_0(), semanticObject.getRoute());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPathsItems returns ExternalsRootAPIDescriptionsItemsPathsItems
	 *
	 * Constraint:
	 *     (items+=ExternalsRootAPIDescriptionsItemsPathsItemsPropertiesAbstract items+=ExternalsRootAPIDescriptionsItemsPathsItemsPropertiesAbstract*)?
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPathsItems(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPathsItems semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsPaths
	 *     ExternalsRootAPIDescriptionsItemsPaths returns ExternalsRootAPIDescriptionsItemsPaths
	 *
	 * Constraint:
	 *     (paths+=ExternalsRootAPIDescriptionsItemsPathsItems paths+=ExternalsRootAPIDescriptionsItemsPathsItems*)?
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsPaths(ISerializationContext context, ExternalsRootAPIDescriptionsItemsPaths semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsProtocol
	 *     ExternalsRootAPIDescriptionsItemsProtocol returns ExternalsRootAPIDescriptionsItemsProtocol
	 *
	 * Constraint:
	 *     protocol=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsProtocol(ISerializationContext context, ExternalsRootAPIDescriptionsItemsProtocol semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PROTOCOL__PROTOCOL) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_PROTOCOL__PROTOCOL));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsProtocolAccess().getProtocolEStringParserRuleCall_2_0(), semanticObject.getProtocol());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItemsPropertiesAbstract returns ExternalsRootAPIDescriptionsItemsUrl
	 *     ExternalsRootAPIDescriptionsItemsUrl returns ExternalsRootAPIDescriptionsItemsUrl
	 *
	 * Constraint:
	 *     url=EString
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItemsUrl(ISerializationContext context, ExternalsRootAPIDescriptionsItemsUrl semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_URL__URL) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, ExternalsPackage.Literals.EXTERNALS_ROOT_API_DESCRIPTIONS_ITEMS_URL__URL));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getExternalsRootAPIDescriptionsItemsUrlAccess().getUrlEStringParserRuleCall_2_0(), semanticObject.getUrl());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootAPIDescriptionsItems returns ExternalsRootAPIDescriptionsItems
	 *
	 * Constraint:
	 *     (items+=ExternalsRootAPIDescriptionsItemsPropertiesAbstract items+=ExternalsRootAPIDescriptionsItemsPropertiesAbstract*)?
	 */
	protected void sequence_ExternalsRootAPIDescriptionsItems(ISerializationContext context, ExternalsRootAPIDescriptionsItems semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRootPropertiesAbstract returns ExternalsRootAPIDescriptions
	 *     ExternalsRootAPIDescriptions returns ExternalsRootAPIDescriptions
	 *
	 * Constraint:
	 *     (APIDescriptions+=ExternalsRootAPIDescriptionsItems APIDescriptions+=ExternalsRootAPIDescriptionsItems*)?
	 */
	protected void sequence_ExternalsRootAPIDescriptions(ISerializationContext context, ExternalsRootAPIDescriptions semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     ExternalsRoot returns ExternalsRoot
	 *
	 * Constraint:
	 *     (externalsRoot+=ExternalsRootPropertiesAbstract externalsRoot+=ExternalsRootPropertiesAbstract*)?
	 */
	protected void sequence_ExternalsRoot(ISerializationContext context, ExternalsRoot semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
}
